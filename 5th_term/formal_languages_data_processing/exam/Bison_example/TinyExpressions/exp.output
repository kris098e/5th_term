Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: tIDENTIFIER
    3    | tINTCONST
    4    | exp '*' exp
    5    | exp '/' exp
    6    | exp '+' exp
    7    | exp '-' exp
    8    | '(' exp ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 8
    ')' (41) 8
    '*' (42) 4
    '+' (43) 6
    '-' (45) 7
    '/' (47) 5
    error (256)
    tINTCONST <intconst> (258) 3
    tIDENTIFIER <stringconst> (259) 2


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    program <exp> (12)
        on left: 1
        on right: 0
    exp <exp> (13)
        on left: 2 3 4 5 6 7 8
        on right: 1 4 5 6 7 8


State 0

    0 $accept: • program $end
    1 program: • exp
    2 exp: • tIDENTIFIER
    3    | • tINTCONST
    4    | • exp '*' exp
    5    | • exp '/' exp
    6    | • exp '+' exp
    7    | • exp '-' exp
    8    | • '(' exp ')'

    tINTCONST    shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    '('          shift, and go to state 3

    program  go to state 4
    exp      go to state 5


State 1

    3 exp: tINTCONST •

    $default  reduce using rule 3 (exp)


State 2

    2 exp: tIDENTIFIER •

    $default  reduce using rule 2 (exp)


State 3

    2 exp: • tIDENTIFIER
    3    | • tINTCONST
    4    | • exp '*' exp
    5    | • exp '/' exp
    6    | • exp '+' exp
    7    | • exp '-' exp
    8    | • '(' exp ')'
    8    | '(' • exp ')'

    tINTCONST    shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    '('          shift, and go to state 3

    exp  go to state 6


State 4

    0 $accept: program • $end

    $end  shift, and go to state 7


State 5

    1 program: exp •  [$end]
    4 exp: exp • '*' exp
    5    | exp • '/' exp
    6    | exp • '+' exp
    7    | exp • '-' exp

    '+'  shift, and go to state 8
    '-'  shift, and go to state 9
    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 1 (program)


State 6

    4 exp: exp • '*' exp
    5    | exp • '/' exp
    6    | exp • '+' exp
    7    | exp • '-' exp
    8    | '(' exp • ')'

    '+'  shift, and go to state 8
    '-'  shift, and go to state 9
    '*'  shift, and go to state 10
    '/'  shift, and go to state 11
    ')'  shift, and go to state 12


State 7

    0 $accept: program $end •

    $default  accept


State 8

    2 exp: • tIDENTIFIER
    3    | • tINTCONST
    4    | • exp '*' exp
    5    | • exp '/' exp
    6    | • exp '+' exp
    6    | exp '+' • exp
    7    | • exp '-' exp
    8    | • '(' exp ')'

    tINTCONST    shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    '('          shift, and go to state 3

    exp  go to state 13


State 9

    2 exp: • tIDENTIFIER
    3    | • tINTCONST
    4    | • exp '*' exp
    5    | • exp '/' exp
    6    | • exp '+' exp
    7    | • exp '-' exp
    7    | exp '-' • exp
    8    | • '(' exp ')'

    tINTCONST    shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    '('          shift, and go to state 3

    exp  go to state 14


State 10

    2 exp: • tIDENTIFIER
    3    | • tINTCONST
    4    | • exp '*' exp
    4    | exp '*' • exp
    5    | • exp '/' exp
    6    | • exp '+' exp
    7    | • exp '-' exp
    8    | • '(' exp ')'

    tINTCONST    shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    '('          shift, and go to state 3

    exp  go to state 15


State 11

    2 exp: • tIDENTIFIER
    3    | • tINTCONST
    4    | • exp '*' exp
    5    | • exp '/' exp
    5    | exp '/' • exp
    6    | • exp '+' exp
    7    | • exp '-' exp
    8    | • '(' exp ')'

    tINTCONST    shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    '('          shift, and go to state 3

    exp  go to state 16


State 12

    8 exp: '(' exp ')' •

    $default  reduce using rule 8 (exp)


State 13

    4 exp: exp • '*' exp
    5    | exp • '/' exp
    6    | exp • '+' exp
    6    | exp '+' exp •  [$end, '+', '-', ')']
    7    | exp • '-' exp

    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 6 (exp)

    Conflict between rule 6 and token '+' resolved as reduce (%left '+').
    Conflict between rule 6 and token '-' resolved as reduce (%left '-').
    Conflict between rule 6 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 6 and token '/' resolved as shift ('+' < '/').


State 14

    4 exp: exp • '*' exp
    5    | exp • '/' exp
    6    | exp • '+' exp
    7    | exp • '-' exp
    7    | exp '-' exp •  [$end, '+', '-', ')']

    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 7 (exp)

    Conflict between rule 7 and token '+' resolved as reduce (%left '+').
    Conflict between rule 7 and token '-' resolved as reduce (%left '-').
    Conflict between rule 7 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 7 and token '/' resolved as shift ('-' < '/').


State 15

    4 exp: exp • '*' exp
    4    | exp '*' exp •  [$end, '+', '-', '*', '/', ')']
    5    | exp • '/' exp
    6    | exp • '+' exp
    7    | exp • '-' exp

    $default  reduce using rule 4 (exp)

    Conflict between rule 4 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 4 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 4 and token '*' resolved as reduce (%left '*').
    Conflict between rule 4 and token '/' resolved as reduce (%left '/').


State 16

    4 exp: exp • '*' exp
    5    | exp • '/' exp
    5    | exp '/' exp •  [$end, '+', '-', '*', '/', ')']
    6    | exp • '+' exp
    7    | exp • '-' exp

    $default  reduce using rule 5 (exp)

    Conflict between rule 5 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 5 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 5 and token '*' resolved as reduce (%left '*').
    Conflict between rule 5 and token '/' resolved as reduce (%left '/').
