
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQNEQLTGTLTEGTEleftPLUSMINUSleftTIMESDIVIDEleftFUNCTIONASSIGN AS_LONG_AS COMMA DIVIDE DO ELSE EQ FUNCTION GT GTE IDENT IF INT LCURL LPAREN LT LTE MINUS NEQ PLUS PRINT RCURL RETURN RPAREN SEMICOL THEN TIMES VAR WHILEprogram : bodyempty :body : optional_variables_declaration_list optional_functions_declaration_list statement_listoptional_variables_declaration_list : empty\n                                           | variables_declaration_listvariables_declaration_list : VAR variables_list\n                                  | VAR variables_list variables_declaration_listvariables_list : IDENT\n                      | IDENT COMMA variables_listoptional_functions_declaration_list : empty\n                                           | functions_declaration_listfunctions_declaration_list : function\n                                  | function functions_declaration_listfunction : FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURLoptional_parameter_list : empty\n                               | parameter_listparameter_list : IDENT\n                      | IDENT COMMA parameter_liststatement : statement_return\n                 | statement_print\n                 | statement_assignment\n                 | statement_ifthenelse\n                 | statement_while\n                 | statement_as_long_as\n                 | statement_compound\n                 | expressionstatement_as_long_as : AS_LONG_AS expression DO statementstatement_return : RETURN expression SEMICOLstatement_print : PRINT expression SEMICOLstatement_assignment : IDENT ASSIGN expression SEMICOLstatement_ifthenelse : IF expression THEN statement ELSE statementstatement_while :  WHILE expression DO statementstatement_compound :  LCURL statement_list RCURLstatement_list : statement\n                      | statement statement_listexpression : expression_integer\n                  | expression_identifier\n                  | expression_call\n                  | expression_binop\n                  | expression_groupexpression_integer : INTexpression_identifier : IDENTexpression_call : IDENT LPAREN optional_expression_list RPARENexpression_binop : expression PLUS expression\n                        | expression MINUS expression\n                        | expression TIMES expression\n                        | expression DIVIDE expression\n                        | expression EQ expression\n                        | expression NEQ expression\n                        | expression LT expression\n                        | expression GT expression\n                        | expression LTE expression\n                        | expression GTE expressionexpression_group : LPAREN expression RPARENoptional_expression_list : empty\n                                | expression_listexpression_list : expression\n                       | expression COMMA expression_list'
    
_lr_action_items = {'FUNCTION':([0,3,4,5,10,12,13,40,64,102,105,],[-2,11,-4,-5,11,-6,-8,-7,-9,-2,-14,]),'RETURN':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,26,30,31,32,33,34,35,36,38,40,54,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,95,96,100,102,103,105,],[-2,-2,-4,-5,24,-10,-11,-12,-6,-8,24,-19,-20,-21,-22,-23,-24,-25,-26,-42,24,-36,-37,-38,-39,-40,-41,-13,-7,-42,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,24,24,24,-33,-54,-30,-43,-32,-27,24,-2,-31,-14,]),'PRINT':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,26,30,31,32,33,34,35,36,38,40,54,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,95,96,100,102,103,105,],[-2,-2,-4,-5,25,-10,-11,-12,-6,-8,25,-19,-20,-21,-22,-23,-24,-25,-26,-42,25,-36,-37,-38,-39,-40,-41,-13,-7,-42,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,25,25,25,-33,-54,-30,-43,-32,-27,25,-2,-31,-14,]),'IDENT':([0,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,43,44,45,46,47,48,49,50,51,52,54,56,57,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,93,95,96,97,100,102,103,105,],[-2,-2,-4,-5,13,26,-10,-11,-12,39,-6,-8,26,-19,-20,-21,-22,-23,-24,-25,-26,54,54,-42,54,54,54,26,-36,-37,-38,-39,-40,-41,54,-13,-7,13,54,54,54,54,54,54,54,54,54,54,-42,54,54,87,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,26,26,26,-33,-54,-30,-43,54,-32,-27,87,26,-2,-31,-14,]),'IF':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,26,30,31,32,33,34,35,36,38,40,54,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,95,96,100,102,103,105,],[-2,-2,-4,-5,27,-10,-11,-12,-6,-8,27,-19,-20,-21,-22,-23,-24,-25,-26,-42,27,-36,-37,-38,-39,-40,-41,-13,-7,-42,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,27,27,27,-33,-54,-30,-43,-32,-27,27,-2,-31,-14,]),'WHILE':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,26,30,31,32,33,34,35,36,38,40,54,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,95,96,100,102,103,105,],[-2,-2,-4,-5,28,-10,-11,-12,-6,-8,28,-19,-20,-21,-22,-23,-24,-25,-26,-42,28,-36,-37,-38,-39,-40,-41,-13,-7,-42,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,28,28,28,-33,-54,-30,-43,-32,-27,28,-2,-31,-14,]),'AS_LONG_AS':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,26,30,31,32,33,34,35,36,38,40,54,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,95,96,100,102,103,105,],[-2,-2,-4,-5,29,-10,-11,-12,-6,-8,29,-19,-20,-21,-22,-23,-24,-25,-26,-42,29,-36,-37,-38,-39,-40,-41,-13,-7,-42,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,29,29,29,-33,-54,-30,-43,-32,-27,29,-2,-31,-14,]),'LCURL':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,26,30,31,32,33,34,35,36,38,40,54,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,95,96,98,100,102,103,105,],[-2,-2,-4,-5,30,-10,-11,-12,-6,-8,30,-19,-20,-21,-22,-23,-24,-25,-26,-42,30,-36,-37,-38,-39,-40,-41,-13,-7,-42,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,30,30,30,-33,-54,-30,-43,-32,-27,102,30,-2,-31,-14,]),'INT':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,43,44,45,46,47,48,49,50,51,52,54,56,57,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,93,95,96,100,102,103,105,],[-2,-2,-4,-5,36,-10,-11,-12,-6,-8,36,-19,-20,-21,-22,-23,-24,-25,-26,36,36,-42,36,36,36,36,-36,-37,-38,-39,-40,-41,36,-13,-7,36,36,36,36,36,36,36,36,36,36,-42,36,36,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,36,36,36,-33,-54,-30,-43,36,-32,-27,36,-2,-31,-14,]),'LPAREN':([0,3,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,54,56,57,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,85,86,91,92,93,95,96,100,102,103,105,],[-2,-2,-4,-5,37,-10,-11,-12,-6,-8,37,-19,-20,-21,-22,-23,-24,-25,-26,37,37,57,37,37,37,37,-36,-37,-38,-39,-40,-41,37,-13,63,-7,37,37,37,37,37,37,37,37,37,37,57,37,37,-9,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,37,37,37,-33,-54,-30,-43,37,-32,-27,37,-2,-31,-14,]),'VAR':([0,12,13,64,102,],[6,6,-8,-9,6,]),'$end':([1,2,14,15,16,17,18,19,20,21,22,23,26,31,32,33,34,35,36,42,54,65,66,67,68,69,70,71,72,73,74,75,76,85,86,91,92,95,96,103,],[0,-1,-3,-34,-19,-20,-21,-22,-23,-24,-25,-26,-42,-36,-37,-38,-39,-40,-41,-35,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,-33,-54,-30,-43,-32,-27,-31,]),'COMMA':([13,31,32,33,34,35,36,54,65,66,67,68,69,70,71,72,73,74,81,86,87,92,],[41,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,93,-54,97,-43,]),'RCURL':([14,15,16,17,18,19,20,21,22,23,26,31,32,33,34,35,36,42,54,61,65,66,67,68,69,70,71,72,73,74,75,76,85,86,91,92,95,96,103,104,],[-3,-34,-19,-20,-21,-22,-23,-24,-25,-26,-42,-36,-37,-38,-39,-40,-41,-35,-42,85,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,-33,-54,-30,-43,-32,-27,-31,105,]),'ELSE':([16,17,18,19,20,21,22,23,26,31,32,33,34,35,36,54,65,66,67,68,69,70,71,72,73,74,75,76,85,86,91,92,94,95,96,103,],[-19,-20,-21,-22,-23,-24,-25,-26,-42,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-28,-29,-33,-54,-30,-43,100,-32,-27,-31,]),'PLUS':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[43,-42,-36,-37,-38,-39,-40,-41,43,-42,43,43,43,43,43,-44,-45,-46,-47,43,43,43,43,43,43,43,43,-54,-43,]),'MINUS':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[44,-42,-36,-37,-38,-39,-40,-41,44,-42,44,44,44,44,44,-44,-45,-46,-47,44,44,44,44,44,44,44,44,-54,-43,]),'TIMES':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[45,-42,-36,-37,-38,-39,-40,-41,45,-42,45,45,45,45,45,45,45,-46,-47,45,45,45,45,45,45,45,45,-54,-43,]),'DIVIDE':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[46,-42,-36,-37,-38,-39,-40,-41,46,-42,46,46,46,46,46,46,46,-46,-47,46,46,46,46,46,46,46,46,-54,-43,]),'EQ':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[47,-42,-36,-37,-38,-39,-40,-41,47,-42,47,47,47,47,47,-44,-45,-46,-47,47,47,47,47,47,47,47,47,-54,-43,]),'NEQ':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[48,-42,-36,-37,-38,-39,-40,-41,48,-42,48,48,48,48,48,-44,-45,-46,-47,48,48,48,48,48,48,48,48,-54,-43,]),'LT':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[49,-42,-36,-37,-38,-39,-40,-41,49,-42,49,49,49,49,49,-44,-45,-46,-47,49,49,49,49,49,49,49,49,-54,-43,]),'GT':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[50,-42,-36,-37,-38,-39,-40,-41,50,-42,50,50,50,50,50,-44,-45,-46,-47,50,50,50,50,50,50,50,50,-54,-43,]),'LTE':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[51,-42,-36,-37,-38,-39,-40,-41,51,-42,51,51,51,51,51,-44,-45,-46,-47,51,51,51,51,51,51,51,51,-54,-43,]),'GTE':([23,26,31,32,33,34,35,36,53,54,55,58,59,60,62,65,66,67,68,69,70,71,72,73,74,77,81,86,92,],[52,-42,-36,-37,-38,-39,-40,-41,52,-42,52,52,52,52,52,-44,-45,-46,-47,52,52,52,52,52,52,52,52,-54,-43,]),'ASSIGN':([26,],[56,]),'SEMICOL':([31,32,33,34,35,36,53,54,55,65,66,67,68,69,70,71,72,73,74,77,86,92,],[-36,-37,-38,-39,-40,-41,75,-42,76,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,91,-54,-43,]),'THEN':([31,32,33,34,35,36,54,58,65,66,67,68,69,70,71,72,73,74,86,92,],[-36,-37,-38,-39,-40,-41,-42,82,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-43,]),'DO':([31,32,33,34,35,36,54,59,60,65,66,67,68,69,70,71,72,73,74,86,92,],[-36,-37,-38,-39,-40,-41,-42,83,84,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-43,]),'RPAREN':([31,32,33,34,35,36,54,57,62,63,65,66,67,68,69,70,71,72,73,74,78,79,80,81,86,87,88,89,90,92,99,101,],[-36,-37,-38,-39,-40,-41,-42,-2,86,-2,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,92,-55,-56,-57,-54,-17,98,-15,-16,-43,-58,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'body':([0,102,],[2,104,]),'optional_variables_declaration_list':([0,102,],[3,3,]),'empty':([0,3,57,63,102,],[4,8,79,89,4,]),'variables_declaration_list':([0,12,102,],[5,40,5,]),'optional_functions_declaration_list':([3,],[7,]),'functions_declaration_list':([3,10,],[9,38,]),'function':([3,10,],[10,10,]),'variables_list':([6,41,],[12,64,]),'statement_list':([7,15,30,],[14,42,61,]),'statement':([7,15,30,82,83,84,100,],[15,15,15,94,95,96,103,]),'statement_return':([7,15,30,82,83,84,100,],[16,16,16,16,16,16,16,]),'statement_print':([7,15,30,82,83,84,100,],[17,17,17,17,17,17,17,]),'statement_assignment':([7,15,30,82,83,84,100,],[18,18,18,18,18,18,18,]),'statement_ifthenelse':([7,15,30,82,83,84,100,],[19,19,19,19,19,19,19,]),'statement_while':([7,15,30,82,83,84,100,],[20,20,20,20,20,20,20,]),'statement_as_long_as':([7,15,30,82,83,84,100,],[21,21,21,21,21,21,21,]),'statement_compound':([7,15,30,82,83,84,100,],[22,22,22,22,22,22,22,]),'expression':([7,15,24,25,27,28,29,30,37,43,44,45,46,47,48,49,50,51,52,56,57,82,83,84,93,100,],[23,23,53,55,58,59,60,23,62,65,66,67,68,69,70,71,72,73,74,77,81,23,23,23,81,23,]),'expression_integer':([7,15,24,25,27,28,29,30,37,43,44,45,46,47,48,49,50,51,52,56,57,82,83,84,93,100,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'expression_identifier':([7,15,24,25,27,28,29,30,37,43,44,45,46,47,48,49,50,51,52,56,57,82,83,84,93,100,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'expression_call':([7,15,24,25,27,28,29,30,37,43,44,45,46,47,48,49,50,51,52,56,57,82,83,84,93,100,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expression_binop':([7,15,24,25,27,28,29,30,37,43,44,45,46,47,48,49,50,51,52,56,57,82,83,84,93,100,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'expression_group':([7,15,24,25,27,28,29,30,37,43,44,45,46,47,48,49,50,51,52,56,57,82,83,84,93,100,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'optional_expression_list':([57,],[78,]),'expression_list':([57,93,],[80,99,]),'optional_parameter_list':([63,],[88,]),'parameter_list':([63,97,],[90,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> body','program',1,'p_program','lexer_parser.py',117),
  ('empty -> <empty>','empty',0,'p_empty','lexer_parser.py',122),
  ('body -> optional_variables_declaration_list optional_functions_declaration_list statement_list','body',3,'p_body','lexer_parser.py',127),
  ('optional_variables_declaration_list -> empty','optional_variables_declaration_list',1,'p_optional_variables_declaration_list','lexer_parser.py',132),
  ('optional_variables_declaration_list -> variables_declaration_list','optional_variables_declaration_list',1,'p_optional_variables_declaration_list','lexer_parser.py',133),
  ('variables_declaration_list -> VAR variables_list','variables_declaration_list',2,'p_variables_declaration_list','lexer_parser.py',138),
  ('variables_declaration_list -> VAR variables_list variables_declaration_list','variables_declaration_list',3,'p_variables_declaration_list','lexer_parser.py',139),
  ('variables_list -> IDENT','variables_list',1,'p_variables_list','lexer_parser.py',147),
  ('variables_list -> IDENT COMMA variables_list','variables_list',3,'p_variables_list','lexer_parser.py',148),
  ('optional_functions_declaration_list -> empty','optional_functions_declaration_list',1,'p_optional_functions_declaration_list','lexer_parser.py',156),
  ('optional_functions_declaration_list -> functions_declaration_list','optional_functions_declaration_list',1,'p_optional_functions_declaration_list','lexer_parser.py',157),
  ('functions_declaration_list -> function','functions_declaration_list',1,'p_functions_declaration_list','lexer_parser.py',162),
  ('functions_declaration_list -> function functions_declaration_list','functions_declaration_list',2,'p_functions_declaration_list','lexer_parser.py',163),
  ('function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL','function',8,'p_function','lexer_parser.py',171),
  ('optional_parameter_list -> empty','optional_parameter_list',1,'p_optional_parameter_list','lexer_parser.py',176),
  ('optional_parameter_list -> parameter_list','optional_parameter_list',1,'p_optional_parameter_list','lexer_parser.py',177),
  ('parameter_list -> IDENT','parameter_list',1,'p_parameter_list','lexer_parser.py',182),
  ('parameter_list -> IDENT COMMA parameter_list','parameter_list',3,'p_parameter_list','lexer_parser.py',183),
  ('statement -> statement_return','statement',1,'p_statement','lexer_parser.py',191),
  ('statement -> statement_print','statement',1,'p_statement','lexer_parser.py',192),
  ('statement -> statement_assignment','statement',1,'p_statement','lexer_parser.py',193),
  ('statement -> statement_ifthenelse','statement',1,'p_statement','lexer_parser.py',194),
  ('statement -> statement_while','statement',1,'p_statement','lexer_parser.py',195),
  ('statement -> statement_as_long_as','statement',1,'p_statement','lexer_parser.py',196),
  ('statement -> statement_compound','statement',1,'p_statement','lexer_parser.py',197),
  ('statement -> expression','statement',1,'p_statement','lexer_parser.py',198),
  ('statement_as_long_as -> AS_LONG_AS expression DO statement','statement_as_long_as',4,'p_statement_as_long_as','lexer_parser.py',202),
  ('statement_return -> RETURN expression SEMICOL','statement_return',3,'p_statement_return','lexer_parser.py',206),
  ('statement_print -> PRINT expression SEMICOL','statement_print',3,'p_statement_print','lexer_parser.py',211),
  ('statement_assignment -> IDENT ASSIGN expression SEMICOL','statement_assignment',4,'p_statement_assignment','lexer_parser.py',216),
  ('statement_ifthenelse -> IF expression THEN statement ELSE statement','statement_ifthenelse',6,'p_statement_ifthenelse','lexer_parser.py',221),
  ('statement_while -> WHILE expression DO statement','statement_while',4,'p_statement_while','lexer_parser.py',226),
  ('statement_compound -> LCURL statement_list RCURL','statement_compound',3,'p_statement_compound','lexer_parser.py',231),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lexer_parser.py',236),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','lexer_parser.py',237),
  ('expression -> expression_integer','expression',1,'p_expression','lexer_parser.py',245),
  ('expression -> expression_identifier','expression',1,'p_expression','lexer_parser.py',246),
  ('expression -> expression_call','expression',1,'p_expression','lexer_parser.py',247),
  ('expression -> expression_binop','expression',1,'p_expression','lexer_parser.py',248),
  ('expression -> expression_group','expression',1,'p_expression','lexer_parser.py',249),
  ('expression_integer -> INT','expression_integer',1,'p_expression_integer','lexer_parser.py',254),
  ('expression_identifier -> IDENT','expression_identifier',1,'p_expression_identifier','lexer_parser.py',259),
  ('expression_call -> IDENT LPAREN optional_expression_list RPAREN','expression_call',4,'p_expression_call','lexer_parser.py',264),
  ('expression_binop -> expression PLUS expression','expression_binop',3,'p_expression_binop','lexer_parser.py',269),
  ('expression_binop -> expression MINUS expression','expression_binop',3,'p_expression_binop','lexer_parser.py',270),
  ('expression_binop -> expression TIMES expression','expression_binop',3,'p_expression_binop','lexer_parser.py',271),
  ('expression_binop -> expression DIVIDE expression','expression_binop',3,'p_expression_binop','lexer_parser.py',272),
  ('expression_binop -> expression EQ expression','expression_binop',3,'p_expression_binop','lexer_parser.py',273),
  ('expression_binop -> expression NEQ expression','expression_binop',3,'p_expression_binop','lexer_parser.py',274),
  ('expression_binop -> expression LT expression','expression_binop',3,'p_expression_binop','lexer_parser.py',275),
  ('expression_binop -> expression GT expression','expression_binop',3,'p_expression_binop','lexer_parser.py',276),
  ('expression_binop -> expression LTE expression','expression_binop',3,'p_expression_binop','lexer_parser.py',277),
  ('expression_binop -> expression GTE expression','expression_binop',3,'p_expression_binop','lexer_parser.py',278),
  ('expression_group -> LPAREN expression RPAREN','expression_group',3,'p_expression_group','lexer_parser.py',283),
  ('optional_expression_list -> empty','optional_expression_list',1,'p_optional_expression_list','lexer_parser.py',288),
  ('optional_expression_list -> expression_list','optional_expression_list',1,'p_optional_expression_list','lexer_parser.py',289),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lexer_parser.py',294),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','lexer_parser.py',295),
]
