Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> body
Rule 2     empty -> <empty>
Rule 3     body -> optional_variables_declaration_list optional_functions_declaration_list statement_list
Rule 4     optional_variables_declaration_list -> empty
Rule 5     optional_variables_declaration_list -> variables_declaration_list
Rule 6     variables_declaration_list -> VAR variables_list
Rule 7     variables_declaration_list -> VAR variables_list variables_declaration_list
Rule 8     variables_list -> IDENT
Rule 9     variables_list -> IDENT COMMA variables_list
Rule 10    optional_functions_declaration_list -> empty
Rule 11    optional_functions_declaration_list -> functions_declaration_list
Rule 12    functions_declaration_list -> function
Rule 13    functions_declaration_list -> function functions_declaration_list
Rule 14    function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL
Rule 15    optional_parameter_list -> empty
Rule 16    optional_parameter_list -> parameter_list
Rule 17    parameter_list -> IDENT
Rule 18    parameter_list -> IDENT COMMA parameter_list
Rule 19    statement -> statement_return
Rule 20    statement -> statement_print
Rule 21    statement -> statement_assignment
Rule 22    statement -> statement_ifthenelse
Rule 23    statement -> statement_while
Rule 24    statement -> statement_as_long_as
Rule 25    statement -> statement_compound
Rule 26    statement -> expression
Rule 27    statement_as_long_as -> AS_LONG_AS expression DO statement
Rule 28    statement_return -> RETURN expression SEMICOL
Rule 29    statement_print -> PRINT expression SEMICOL
Rule 30    statement_assignment -> IDENT ASSIGN expression SEMICOL
Rule 31    statement_ifthenelse -> IF expression THEN statement ELSE statement
Rule 32    statement_while -> WHILE expression DO statement
Rule 33    statement_compound -> LCURL statement_list RCURL
Rule 34    statement_list -> statement
Rule 35    statement_list -> statement statement_list
Rule 36    expression -> expression_integer
Rule 37    expression -> expression_identifier
Rule 38    expression -> expression_call
Rule 39    expression -> expression_binop
Rule 40    expression -> expression_group
Rule 41    expression_integer -> INT
Rule 42    expression_identifier -> IDENT
Rule 43    expression_call -> IDENT LPAREN optional_expression_list RPAREN
Rule 44    expression_binop -> expression PLUS expression
Rule 45    expression_binop -> expression MINUS expression
Rule 46    expression_binop -> expression TIMES expression
Rule 47    expression_binop -> expression DIVIDE expression
Rule 48    expression_binop -> expression EQ expression
Rule 49    expression_binop -> expression NEQ expression
Rule 50    expression_binop -> expression LT expression
Rule 51    expression_binop -> expression GT expression
Rule 52    expression_binop -> expression LTE expression
Rule 53    expression_binop -> expression GTE expression
Rule 54    expression_group -> LPAREN expression RPAREN
Rule 55    optional_expression_list -> empty
Rule 56    optional_expression_list -> expression_list
Rule 57    expression_list -> expression
Rule 58    expression_list -> expression COMMA expression_list

Terminals, with rules where they appear

ASSIGN               : 30
AS_LONG_AS           : 27
COMMA                : 9 18 58
DIVIDE               : 47
DO                   : 27 32
ELSE                 : 31
EQ                   : 48
FUNCTION             : 14
GT                   : 51
GTE                  : 53
IDENT                : 8 9 14 17 18 30 42 43
IF                   : 31
INT                  : 41
LCURL                : 14 33
LPAREN               : 14 43 54
LT                   : 50
LTE                  : 52
MINUS                : 45
NEQ                  : 49
PLUS                 : 44
PRINT                : 29
RCURL                : 14 33
RETURN               : 28
RPAREN               : 14 43 54
SEMICOL              : 28 29 30
THEN                 : 31
TIMES                : 46
VAR                  : 6 7
WHILE                : 32
error                : 

Nonterminals, with rules where they appear

body                 : 1 14
empty                : 4 10 15 55
expression           : 26 27 28 29 30 31 32 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 57 58
expression_binop     : 39
expression_call      : 38
expression_group     : 40
expression_identifier : 37
expression_integer   : 36
expression_list      : 56 58
function             : 12 13
functions_declaration_list : 11 13
optional_expression_list : 43
optional_functions_declaration_list : 3
optional_parameter_list : 14
optional_variables_declaration_list : 3
parameter_list       : 16 18
program              : 0
statement            : 27 31 31 32 34 35
statement_as_long_as : 24
statement_assignment : 21
statement_compound   : 25
statement_ifthenelse : 22
statement_list       : 3 33 35
statement_print      : 20
statement_return     : 19
statement_while      : 23
variables_declaration_list : 5 7
variables_list       : 6 7 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . body
    (3) body -> . optional_variables_declaration_list optional_functions_declaration_list statement_list
    (4) optional_variables_declaration_list -> . empty
    (5) optional_variables_declaration_list -> . variables_declaration_list
    (2) empty -> .
    (6) variables_declaration_list -> . VAR variables_list
    (7) variables_declaration_list -> . VAR variables_list variables_declaration_list

    FUNCTION        reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    PRINT           reduce using rule 2 (empty -> .)
    IDENT           reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    AS_LONG_AS      reduce using rule 2 (empty -> .)
    LCURL           reduce using rule 2 (empty -> .)
    INT             reduce using rule 2 (empty -> .)
    LPAREN          reduce using rule 2 (empty -> .)
    VAR             shift and go to state 6

    program                        shift and go to state 1
    body                           shift and go to state 2
    optional_variables_declaration_list shift and go to state 3
    empty                          shift and go to state 4
    variables_declaration_list     shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> body .

    $end            reduce using rule 1 (program -> body .)


state 3

    (3) body -> optional_variables_declaration_list . optional_functions_declaration_list statement_list
    (10) optional_functions_declaration_list -> . empty
    (11) optional_functions_declaration_list -> . functions_declaration_list
    (2) empty -> .
    (12) functions_declaration_list -> . function
    (13) functions_declaration_list -> . function functions_declaration_list
    (14) function -> . FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL

    RETURN          reduce using rule 2 (empty -> .)
    PRINT           reduce using rule 2 (empty -> .)
    IDENT           reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    AS_LONG_AS      reduce using rule 2 (empty -> .)
    LCURL           reduce using rule 2 (empty -> .)
    INT             reduce using rule 2 (empty -> .)
    LPAREN          reduce using rule 2 (empty -> .)
    FUNCTION        shift and go to state 11

    optional_functions_declaration_list shift and go to state 7
    empty                          shift and go to state 8
    functions_declaration_list     shift and go to state 9
    function                       shift and go to state 10

state 4

    (4) optional_variables_declaration_list -> empty .

    FUNCTION        reduce using rule 4 (optional_variables_declaration_list -> empty .)
    RETURN          reduce using rule 4 (optional_variables_declaration_list -> empty .)
    PRINT           reduce using rule 4 (optional_variables_declaration_list -> empty .)
    IDENT           reduce using rule 4 (optional_variables_declaration_list -> empty .)
    IF              reduce using rule 4 (optional_variables_declaration_list -> empty .)
    WHILE           reduce using rule 4 (optional_variables_declaration_list -> empty .)
    AS_LONG_AS      reduce using rule 4 (optional_variables_declaration_list -> empty .)
    LCURL           reduce using rule 4 (optional_variables_declaration_list -> empty .)
    INT             reduce using rule 4 (optional_variables_declaration_list -> empty .)
    LPAREN          reduce using rule 4 (optional_variables_declaration_list -> empty .)


state 5

    (5) optional_variables_declaration_list -> variables_declaration_list .

    FUNCTION        reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    RETURN          reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    PRINT           reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    IDENT           reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    IF              reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    WHILE           reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    AS_LONG_AS      reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    LCURL           reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    INT             reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)
    LPAREN          reduce using rule 5 (optional_variables_declaration_list -> variables_declaration_list .)


state 6

    (6) variables_declaration_list -> VAR . variables_list
    (7) variables_declaration_list -> VAR . variables_list variables_declaration_list
    (8) variables_list -> . IDENT
    (9) variables_list -> . IDENT COMMA variables_list

    IDENT           shift and go to state 13

    variables_list                 shift and go to state 12

state 7

    (3) body -> optional_variables_declaration_list optional_functions_declaration_list . statement_list
    (34) statement_list -> . statement
    (35) statement_list -> . statement statement_list
    (19) statement -> . statement_return
    (20) statement -> . statement_print
    (21) statement -> . statement_assignment
    (22) statement -> . statement_ifthenelse
    (23) statement -> . statement_while
    (24) statement -> . statement_as_long_as
    (25) statement -> . statement_compound
    (26) statement -> . expression
    (28) statement_return -> . RETURN expression SEMICOL
    (29) statement_print -> . PRINT expression SEMICOL
    (30) statement_assignment -> . IDENT ASSIGN expression SEMICOL
    (31) statement_ifthenelse -> . IF expression THEN statement ELSE statement
    (32) statement_while -> . WHILE expression DO statement
    (27) statement_as_long_as -> . AS_LONG_AS expression DO statement
    (33) statement_compound -> . LCURL statement_list RCURL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    RETURN          shift and go to state 24
    PRINT           shift and go to state 25
    IDENT           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    AS_LONG_AS      shift and go to state 29
    LCURL           shift and go to state 30
    INT             shift and go to state 36
    LPAREN          shift and go to state 37

    statement_list                 shift and go to state 14
    statement                      shift and go to state 15
    statement_return               shift and go to state 16
    statement_print                shift and go to state 17
    statement_assignment           shift and go to state 18
    statement_ifthenelse           shift and go to state 19
    statement_while                shift and go to state 20
    statement_as_long_as           shift and go to state 21
    statement_compound             shift and go to state 22
    expression                     shift and go to state 23
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 8

    (10) optional_functions_declaration_list -> empty .

    RETURN          reduce using rule 10 (optional_functions_declaration_list -> empty .)
    PRINT           reduce using rule 10 (optional_functions_declaration_list -> empty .)
    IDENT           reduce using rule 10 (optional_functions_declaration_list -> empty .)
    IF              reduce using rule 10 (optional_functions_declaration_list -> empty .)
    WHILE           reduce using rule 10 (optional_functions_declaration_list -> empty .)
    AS_LONG_AS      reduce using rule 10 (optional_functions_declaration_list -> empty .)
    LCURL           reduce using rule 10 (optional_functions_declaration_list -> empty .)
    INT             reduce using rule 10 (optional_functions_declaration_list -> empty .)
    LPAREN          reduce using rule 10 (optional_functions_declaration_list -> empty .)


state 9

    (11) optional_functions_declaration_list -> functions_declaration_list .

    RETURN          reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    PRINT           reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    IDENT           reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    IF              reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    WHILE           reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    AS_LONG_AS      reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    LCURL           reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    INT             reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)
    LPAREN          reduce using rule 11 (optional_functions_declaration_list -> functions_declaration_list .)


state 10

    (12) functions_declaration_list -> function .
    (13) functions_declaration_list -> function . functions_declaration_list
    (12) functions_declaration_list -> . function
    (13) functions_declaration_list -> . function functions_declaration_list
    (14) function -> . FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL

    RETURN          reduce using rule 12 (functions_declaration_list -> function .)
    PRINT           reduce using rule 12 (functions_declaration_list -> function .)
    IDENT           reduce using rule 12 (functions_declaration_list -> function .)
    IF              reduce using rule 12 (functions_declaration_list -> function .)
    WHILE           reduce using rule 12 (functions_declaration_list -> function .)
    AS_LONG_AS      reduce using rule 12 (functions_declaration_list -> function .)
    LCURL           reduce using rule 12 (functions_declaration_list -> function .)
    INT             reduce using rule 12 (functions_declaration_list -> function .)
    LPAREN          reduce using rule 12 (functions_declaration_list -> function .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    functions_declaration_list     shift and go to state 38

state 11

    (14) function -> FUNCTION . IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL

    IDENT           shift and go to state 39


state 12

    (6) variables_declaration_list -> VAR variables_list .
    (7) variables_declaration_list -> VAR variables_list . variables_declaration_list
    (6) variables_declaration_list -> . VAR variables_list
    (7) variables_declaration_list -> . VAR variables_list variables_declaration_list

    FUNCTION        reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    RETURN          reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    PRINT           reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    IDENT           reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    IF              reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    WHILE           reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    AS_LONG_AS      reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    LCURL           reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    INT             reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    LPAREN          reduce using rule 6 (variables_declaration_list -> VAR variables_list .)
    VAR             shift and go to state 6

    variables_declaration_list     shift and go to state 40

state 13

    (8) variables_list -> IDENT .
    (9) variables_list -> IDENT . COMMA variables_list

    VAR             reduce using rule 8 (variables_list -> IDENT .)
    FUNCTION        reduce using rule 8 (variables_list -> IDENT .)
    RETURN          reduce using rule 8 (variables_list -> IDENT .)
    PRINT           reduce using rule 8 (variables_list -> IDENT .)
    IDENT           reduce using rule 8 (variables_list -> IDENT .)
    IF              reduce using rule 8 (variables_list -> IDENT .)
    WHILE           reduce using rule 8 (variables_list -> IDENT .)
    AS_LONG_AS      reduce using rule 8 (variables_list -> IDENT .)
    LCURL           reduce using rule 8 (variables_list -> IDENT .)
    INT             reduce using rule 8 (variables_list -> IDENT .)
    LPAREN          reduce using rule 8 (variables_list -> IDENT .)
    COMMA           shift and go to state 41


state 14

    (3) body -> optional_variables_declaration_list optional_functions_declaration_list statement_list .

    $end            reduce using rule 3 (body -> optional_variables_declaration_list optional_functions_declaration_list statement_list .)
    RCURL           reduce using rule 3 (body -> optional_variables_declaration_list optional_functions_declaration_list statement_list .)


state 15

    (34) statement_list -> statement .
    (35) statement_list -> statement . statement_list
    (34) statement_list -> . statement
    (35) statement_list -> . statement statement_list
    (19) statement -> . statement_return
    (20) statement -> . statement_print
    (21) statement -> . statement_assignment
    (22) statement -> . statement_ifthenelse
    (23) statement -> . statement_while
    (24) statement -> . statement_as_long_as
    (25) statement -> . statement_compound
    (26) statement -> . expression
    (28) statement_return -> . RETURN expression SEMICOL
    (29) statement_print -> . PRINT expression SEMICOL
    (30) statement_assignment -> . IDENT ASSIGN expression SEMICOL
    (31) statement_ifthenelse -> . IF expression THEN statement ELSE statement
    (32) statement_while -> . WHILE expression DO statement
    (27) statement_as_long_as -> . AS_LONG_AS expression DO statement
    (33) statement_compound -> . LCURL statement_list RCURL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    $end            reduce using rule 34 (statement_list -> statement .)
    RCURL           reduce using rule 34 (statement_list -> statement .)
    RETURN          shift and go to state 24
    PRINT           shift and go to state 25
    IDENT           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    AS_LONG_AS      shift and go to state 29
    LCURL           shift and go to state 30
    INT             shift and go to state 36
    LPAREN          shift and go to state 37

    statement                      shift and go to state 15
    statement_list                 shift and go to state 42
    statement_return               shift and go to state 16
    statement_print                shift and go to state 17
    statement_assignment           shift and go to state 18
    statement_ifthenelse           shift and go to state 19
    statement_while                shift and go to state 20
    statement_as_long_as           shift and go to state 21
    statement_compound             shift and go to state 22
    expression                     shift and go to state 23
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 16

    (19) statement -> statement_return .

    RETURN          reduce using rule 19 (statement -> statement_return .)
    PRINT           reduce using rule 19 (statement -> statement_return .)
    IDENT           reduce using rule 19 (statement -> statement_return .)
    IF              reduce using rule 19 (statement -> statement_return .)
    WHILE           reduce using rule 19 (statement -> statement_return .)
    AS_LONG_AS      reduce using rule 19 (statement -> statement_return .)
    LCURL           reduce using rule 19 (statement -> statement_return .)
    INT             reduce using rule 19 (statement -> statement_return .)
    LPAREN          reduce using rule 19 (statement -> statement_return .)
    $end            reduce using rule 19 (statement -> statement_return .)
    RCURL           reduce using rule 19 (statement -> statement_return .)
    ELSE            reduce using rule 19 (statement -> statement_return .)


state 17

    (20) statement -> statement_print .

    RETURN          reduce using rule 20 (statement -> statement_print .)
    PRINT           reduce using rule 20 (statement -> statement_print .)
    IDENT           reduce using rule 20 (statement -> statement_print .)
    IF              reduce using rule 20 (statement -> statement_print .)
    WHILE           reduce using rule 20 (statement -> statement_print .)
    AS_LONG_AS      reduce using rule 20 (statement -> statement_print .)
    LCURL           reduce using rule 20 (statement -> statement_print .)
    INT             reduce using rule 20 (statement -> statement_print .)
    LPAREN          reduce using rule 20 (statement -> statement_print .)
    $end            reduce using rule 20 (statement -> statement_print .)
    RCURL           reduce using rule 20 (statement -> statement_print .)
    ELSE            reduce using rule 20 (statement -> statement_print .)


state 18

    (21) statement -> statement_assignment .

    RETURN          reduce using rule 21 (statement -> statement_assignment .)
    PRINT           reduce using rule 21 (statement -> statement_assignment .)
    IDENT           reduce using rule 21 (statement -> statement_assignment .)
    IF              reduce using rule 21 (statement -> statement_assignment .)
    WHILE           reduce using rule 21 (statement -> statement_assignment .)
    AS_LONG_AS      reduce using rule 21 (statement -> statement_assignment .)
    LCURL           reduce using rule 21 (statement -> statement_assignment .)
    INT             reduce using rule 21 (statement -> statement_assignment .)
    LPAREN          reduce using rule 21 (statement -> statement_assignment .)
    $end            reduce using rule 21 (statement -> statement_assignment .)
    RCURL           reduce using rule 21 (statement -> statement_assignment .)
    ELSE            reduce using rule 21 (statement -> statement_assignment .)


state 19

    (22) statement -> statement_ifthenelse .

    RETURN          reduce using rule 22 (statement -> statement_ifthenelse .)
    PRINT           reduce using rule 22 (statement -> statement_ifthenelse .)
    IDENT           reduce using rule 22 (statement -> statement_ifthenelse .)
    IF              reduce using rule 22 (statement -> statement_ifthenelse .)
    WHILE           reduce using rule 22 (statement -> statement_ifthenelse .)
    AS_LONG_AS      reduce using rule 22 (statement -> statement_ifthenelse .)
    LCURL           reduce using rule 22 (statement -> statement_ifthenelse .)
    INT             reduce using rule 22 (statement -> statement_ifthenelse .)
    LPAREN          reduce using rule 22 (statement -> statement_ifthenelse .)
    $end            reduce using rule 22 (statement -> statement_ifthenelse .)
    RCURL           reduce using rule 22 (statement -> statement_ifthenelse .)
    ELSE            reduce using rule 22 (statement -> statement_ifthenelse .)


state 20

    (23) statement -> statement_while .

    RETURN          reduce using rule 23 (statement -> statement_while .)
    PRINT           reduce using rule 23 (statement -> statement_while .)
    IDENT           reduce using rule 23 (statement -> statement_while .)
    IF              reduce using rule 23 (statement -> statement_while .)
    WHILE           reduce using rule 23 (statement -> statement_while .)
    AS_LONG_AS      reduce using rule 23 (statement -> statement_while .)
    LCURL           reduce using rule 23 (statement -> statement_while .)
    INT             reduce using rule 23 (statement -> statement_while .)
    LPAREN          reduce using rule 23 (statement -> statement_while .)
    $end            reduce using rule 23 (statement -> statement_while .)
    RCURL           reduce using rule 23 (statement -> statement_while .)
    ELSE            reduce using rule 23 (statement -> statement_while .)


state 21

    (24) statement -> statement_as_long_as .

    RETURN          reduce using rule 24 (statement -> statement_as_long_as .)
    PRINT           reduce using rule 24 (statement -> statement_as_long_as .)
    IDENT           reduce using rule 24 (statement -> statement_as_long_as .)
    IF              reduce using rule 24 (statement -> statement_as_long_as .)
    WHILE           reduce using rule 24 (statement -> statement_as_long_as .)
    AS_LONG_AS      reduce using rule 24 (statement -> statement_as_long_as .)
    LCURL           reduce using rule 24 (statement -> statement_as_long_as .)
    INT             reduce using rule 24 (statement -> statement_as_long_as .)
    LPAREN          reduce using rule 24 (statement -> statement_as_long_as .)
    $end            reduce using rule 24 (statement -> statement_as_long_as .)
    RCURL           reduce using rule 24 (statement -> statement_as_long_as .)
    ELSE            reduce using rule 24 (statement -> statement_as_long_as .)


state 22

    (25) statement -> statement_compound .

    RETURN          reduce using rule 25 (statement -> statement_compound .)
    PRINT           reduce using rule 25 (statement -> statement_compound .)
    IDENT           reduce using rule 25 (statement -> statement_compound .)
    IF              reduce using rule 25 (statement -> statement_compound .)
    WHILE           reduce using rule 25 (statement -> statement_compound .)
    AS_LONG_AS      reduce using rule 25 (statement -> statement_compound .)
    LCURL           reduce using rule 25 (statement -> statement_compound .)
    INT             reduce using rule 25 (statement -> statement_compound .)
    LPAREN          reduce using rule 25 (statement -> statement_compound .)
    $end            reduce using rule 25 (statement -> statement_compound .)
    RCURL           reduce using rule 25 (statement -> statement_compound .)
    ELSE            reduce using rule 25 (statement -> statement_compound .)


state 23

    (26) statement -> expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RETURN          reduce using rule 26 (statement -> expression .)
    PRINT           reduce using rule 26 (statement -> expression .)
    IDENT           reduce using rule 26 (statement -> expression .)
    IF              reduce using rule 26 (statement -> expression .)
    WHILE           reduce using rule 26 (statement -> expression .)
    AS_LONG_AS      reduce using rule 26 (statement -> expression .)
    LCURL           reduce using rule 26 (statement -> expression .)
    INT             reduce using rule 26 (statement -> expression .)
    LPAREN          reduce using rule 26 (statement -> expression .)
    $end            reduce using rule 26 (statement -> expression .)
    RCURL           reduce using rule 26 (statement -> expression .)
    ELSE            reduce using rule 26 (statement -> expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 24

    (28) statement_return -> RETURN . expression SEMICOL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 53
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 25

    (29) statement_print -> PRINT . expression SEMICOL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 55
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 26

    (30) statement_assignment -> IDENT . ASSIGN expression SEMICOL
    (42) expression_identifier -> IDENT .
    (43) expression_call -> IDENT . LPAREN optional_expression_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    ASSIGN          shift and go to state 56
    PLUS            reduce using rule 42 (expression_identifier -> IDENT .)
    MINUS           reduce using rule 42 (expression_identifier -> IDENT .)
    TIMES           reduce using rule 42 (expression_identifier -> IDENT .)
    DIVIDE          reduce using rule 42 (expression_identifier -> IDENT .)
    EQ              reduce using rule 42 (expression_identifier -> IDENT .)
    NEQ             reduce using rule 42 (expression_identifier -> IDENT .)
    LT              reduce using rule 42 (expression_identifier -> IDENT .)
    GT              reduce using rule 42 (expression_identifier -> IDENT .)
    LTE             reduce using rule 42 (expression_identifier -> IDENT .)
    GTE             reduce using rule 42 (expression_identifier -> IDENT .)
    RETURN          reduce using rule 42 (expression_identifier -> IDENT .)
    PRINT           reduce using rule 42 (expression_identifier -> IDENT .)
    IDENT           reduce using rule 42 (expression_identifier -> IDENT .)
    IF              reduce using rule 42 (expression_identifier -> IDENT .)
    WHILE           reduce using rule 42 (expression_identifier -> IDENT .)
    AS_LONG_AS      reduce using rule 42 (expression_identifier -> IDENT .)
    LCURL           reduce using rule 42 (expression_identifier -> IDENT .)
    INT             reduce using rule 42 (expression_identifier -> IDENT .)
    $end            reduce using rule 42 (expression_identifier -> IDENT .)
    RCURL           reduce using rule 42 (expression_identifier -> IDENT .)
    ELSE            reduce using rule 42 (expression_identifier -> IDENT .)
    LPAREN          shift and go to state 57

  ! LPAREN          [ reduce using rule 42 (expression_identifier -> IDENT .) ]


state 27

    (31) statement_ifthenelse -> IF . expression THEN statement ELSE statement
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 58
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 28

    (32) statement_while -> WHILE . expression DO statement
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 59
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 29

    (27) statement_as_long_as -> AS_LONG_AS . expression DO statement
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 60
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 30

    (33) statement_compound -> LCURL . statement_list RCURL
    (34) statement_list -> . statement
    (35) statement_list -> . statement statement_list
    (19) statement -> . statement_return
    (20) statement -> . statement_print
    (21) statement -> . statement_assignment
    (22) statement -> . statement_ifthenelse
    (23) statement -> . statement_while
    (24) statement -> . statement_as_long_as
    (25) statement -> . statement_compound
    (26) statement -> . expression
    (28) statement_return -> . RETURN expression SEMICOL
    (29) statement_print -> . PRINT expression SEMICOL
    (30) statement_assignment -> . IDENT ASSIGN expression SEMICOL
    (31) statement_ifthenelse -> . IF expression THEN statement ELSE statement
    (32) statement_while -> . WHILE expression DO statement
    (27) statement_as_long_as -> . AS_LONG_AS expression DO statement
    (33) statement_compound -> . LCURL statement_list RCURL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    RETURN          shift and go to state 24
    PRINT           shift and go to state 25
    IDENT           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    AS_LONG_AS      shift and go to state 29
    LCURL           shift and go to state 30
    INT             shift and go to state 36
    LPAREN          shift and go to state 37

    statement_list                 shift and go to state 61
    statement                      shift and go to state 15
    statement_return               shift and go to state 16
    statement_print                shift and go to state 17
    statement_assignment           shift and go to state 18
    statement_ifthenelse           shift and go to state 19
    statement_while                shift and go to state 20
    statement_as_long_as           shift and go to state 21
    statement_compound             shift and go to state 22
    expression                     shift and go to state 23
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 31

    (36) expression -> expression_integer .

    PLUS            reduce using rule 36 (expression -> expression_integer .)
    MINUS           reduce using rule 36 (expression -> expression_integer .)
    TIMES           reduce using rule 36 (expression -> expression_integer .)
    DIVIDE          reduce using rule 36 (expression -> expression_integer .)
    EQ              reduce using rule 36 (expression -> expression_integer .)
    NEQ             reduce using rule 36 (expression -> expression_integer .)
    LT              reduce using rule 36 (expression -> expression_integer .)
    GT              reduce using rule 36 (expression -> expression_integer .)
    LTE             reduce using rule 36 (expression -> expression_integer .)
    GTE             reduce using rule 36 (expression -> expression_integer .)
    RETURN          reduce using rule 36 (expression -> expression_integer .)
    PRINT           reduce using rule 36 (expression -> expression_integer .)
    IDENT           reduce using rule 36 (expression -> expression_integer .)
    IF              reduce using rule 36 (expression -> expression_integer .)
    WHILE           reduce using rule 36 (expression -> expression_integer .)
    AS_LONG_AS      reduce using rule 36 (expression -> expression_integer .)
    LCURL           reduce using rule 36 (expression -> expression_integer .)
    INT             reduce using rule 36 (expression -> expression_integer .)
    LPAREN          reduce using rule 36 (expression -> expression_integer .)
    $end            reduce using rule 36 (expression -> expression_integer .)
    RCURL           reduce using rule 36 (expression -> expression_integer .)
    SEMICOL         reduce using rule 36 (expression -> expression_integer .)
    THEN            reduce using rule 36 (expression -> expression_integer .)
    DO              reduce using rule 36 (expression -> expression_integer .)
    RPAREN          reduce using rule 36 (expression -> expression_integer .)
    COMMA           reduce using rule 36 (expression -> expression_integer .)
    ELSE            reduce using rule 36 (expression -> expression_integer .)


state 32

    (37) expression -> expression_identifier .

    PLUS            reduce using rule 37 (expression -> expression_identifier .)
    MINUS           reduce using rule 37 (expression -> expression_identifier .)
    TIMES           reduce using rule 37 (expression -> expression_identifier .)
    DIVIDE          reduce using rule 37 (expression -> expression_identifier .)
    EQ              reduce using rule 37 (expression -> expression_identifier .)
    NEQ             reduce using rule 37 (expression -> expression_identifier .)
    LT              reduce using rule 37 (expression -> expression_identifier .)
    GT              reduce using rule 37 (expression -> expression_identifier .)
    LTE             reduce using rule 37 (expression -> expression_identifier .)
    GTE             reduce using rule 37 (expression -> expression_identifier .)
    RETURN          reduce using rule 37 (expression -> expression_identifier .)
    PRINT           reduce using rule 37 (expression -> expression_identifier .)
    IDENT           reduce using rule 37 (expression -> expression_identifier .)
    IF              reduce using rule 37 (expression -> expression_identifier .)
    WHILE           reduce using rule 37 (expression -> expression_identifier .)
    AS_LONG_AS      reduce using rule 37 (expression -> expression_identifier .)
    LCURL           reduce using rule 37 (expression -> expression_identifier .)
    INT             reduce using rule 37 (expression -> expression_identifier .)
    LPAREN          reduce using rule 37 (expression -> expression_identifier .)
    $end            reduce using rule 37 (expression -> expression_identifier .)
    RCURL           reduce using rule 37 (expression -> expression_identifier .)
    SEMICOL         reduce using rule 37 (expression -> expression_identifier .)
    THEN            reduce using rule 37 (expression -> expression_identifier .)
    DO              reduce using rule 37 (expression -> expression_identifier .)
    RPAREN          reduce using rule 37 (expression -> expression_identifier .)
    COMMA           reduce using rule 37 (expression -> expression_identifier .)
    ELSE            reduce using rule 37 (expression -> expression_identifier .)


state 33

    (38) expression -> expression_call .

    PLUS            reduce using rule 38 (expression -> expression_call .)
    MINUS           reduce using rule 38 (expression -> expression_call .)
    TIMES           reduce using rule 38 (expression -> expression_call .)
    DIVIDE          reduce using rule 38 (expression -> expression_call .)
    EQ              reduce using rule 38 (expression -> expression_call .)
    NEQ             reduce using rule 38 (expression -> expression_call .)
    LT              reduce using rule 38 (expression -> expression_call .)
    GT              reduce using rule 38 (expression -> expression_call .)
    LTE             reduce using rule 38 (expression -> expression_call .)
    GTE             reduce using rule 38 (expression -> expression_call .)
    RETURN          reduce using rule 38 (expression -> expression_call .)
    PRINT           reduce using rule 38 (expression -> expression_call .)
    IDENT           reduce using rule 38 (expression -> expression_call .)
    IF              reduce using rule 38 (expression -> expression_call .)
    WHILE           reduce using rule 38 (expression -> expression_call .)
    AS_LONG_AS      reduce using rule 38 (expression -> expression_call .)
    LCURL           reduce using rule 38 (expression -> expression_call .)
    INT             reduce using rule 38 (expression -> expression_call .)
    LPAREN          reduce using rule 38 (expression -> expression_call .)
    $end            reduce using rule 38 (expression -> expression_call .)
    RCURL           reduce using rule 38 (expression -> expression_call .)
    SEMICOL         reduce using rule 38 (expression -> expression_call .)
    THEN            reduce using rule 38 (expression -> expression_call .)
    DO              reduce using rule 38 (expression -> expression_call .)
    RPAREN          reduce using rule 38 (expression -> expression_call .)
    COMMA           reduce using rule 38 (expression -> expression_call .)
    ELSE            reduce using rule 38 (expression -> expression_call .)


state 34

    (39) expression -> expression_binop .

    PLUS            reduce using rule 39 (expression -> expression_binop .)
    MINUS           reduce using rule 39 (expression -> expression_binop .)
    TIMES           reduce using rule 39 (expression -> expression_binop .)
    DIVIDE          reduce using rule 39 (expression -> expression_binop .)
    EQ              reduce using rule 39 (expression -> expression_binop .)
    NEQ             reduce using rule 39 (expression -> expression_binop .)
    LT              reduce using rule 39 (expression -> expression_binop .)
    GT              reduce using rule 39 (expression -> expression_binop .)
    LTE             reduce using rule 39 (expression -> expression_binop .)
    GTE             reduce using rule 39 (expression -> expression_binop .)
    RETURN          reduce using rule 39 (expression -> expression_binop .)
    PRINT           reduce using rule 39 (expression -> expression_binop .)
    IDENT           reduce using rule 39 (expression -> expression_binop .)
    IF              reduce using rule 39 (expression -> expression_binop .)
    WHILE           reduce using rule 39 (expression -> expression_binop .)
    AS_LONG_AS      reduce using rule 39 (expression -> expression_binop .)
    LCURL           reduce using rule 39 (expression -> expression_binop .)
    INT             reduce using rule 39 (expression -> expression_binop .)
    LPAREN          reduce using rule 39 (expression -> expression_binop .)
    $end            reduce using rule 39 (expression -> expression_binop .)
    RCURL           reduce using rule 39 (expression -> expression_binop .)
    SEMICOL         reduce using rule 39 (expression -> expression_binop .)
    THEN            reduce using rule 39 (expression -> expression_binop .)
    DO              reduce using rule 39 (expression -> expression_binop .)
    RPAREN          reduce using rule 39 (expression -> expression_binop .)
    COMMA           reduce using rule 39 (expression -> expression_binop .)
    ELSE            reduce using rule 39 (expression -> expression_binop .)


state 35

    (40) expression -> expression_group .

    PLUS            reduce using rule 40 (expression -> expression_group .)
    MINUS           reduce using rule 40 (expression -> expression_group .)
    TIMES           reduce using rule 40 (expression -> expression_group .)
    DIVIDE          reduce using rule 40 (expression -> expression_group .)
    EQ              reduce using rule 40 (expression -> expression_group .)
    NEQ             reduce using rule 40 (expression -> expression_group .)
    LT              reduce using rule 40 (expression -> expression_group .)
    GT              reduce using rule 40 (expression -> expression_group .)
    LTE             reduce using rule 40 (expression -> expression_group .)
    GTE             reduce using rule 40 (expression -> expression_group .)
    RETURN          reduce using rule 40 (expression -> expression_group .)
    PRINT           reduce using rule 40 (expression -> expression_group .)
    IDENT           reduce using rule 40 (expression -> expression_group .)
    IF              reduce using rule 40 (expression -> expression_group .)
    WHILE           reduce using rule 40 (expression -> expression_group .)
    AS_LONG_AS      reduce using rule 40 (expression -> expression_group .)
    LCURL           reduce using rule 40 (expression -> expression_group .)
    INT             reduce using rule 40 (expression -> expression_group .)
    LPAREN          reduce using rule 40 (expression -> expression_group .)
    $end            reduce using rule 40 (expression -> expression_group .)
    RCURL           reduce using rule 40 (expression -> expression_group .)
    SEMICOL         reduce using rule 40 (expression -> expression_group .)
    THEN            reduce using rule 40 (expression -> expression_group .)
    DO              reduce using rule 40 (expression -> expression_group .)
    RPAREN          reduce using rule 40 (expression -> expression_group .)
    COMMA           reduce using rule 40 (expression -> expression_group .)
    ELSE            reduce using rule 40 (expression -> expression_group .)


state 36

    (41) expression_integer -> INT .

    PLUS            reduce using rule 41 (expression_integer -> INT .)
    MINUS           reduce using rule 41 (expression_integer -> INT .)
    TIMES           reduce using rule 41 (expression_integer -> INT .)
    DIVIDE          reduce using rule 41 (expression_integer -> INT .)
    EQ              reduce using rule 41 (expression_integer -> INT .)
    NEQ             reduce using rule 41 (expression_integer -> INT .)
    LT              reduce using rule 41 (expression_integer -> INT .)
    GT              reduce using rule 41 (expression_integer -> INT .)
    LTE             reduce using rule 41 (expression_integer -> INT .)
    GTE             reduce using rule 41 (expression_integer -> INT .)
    RETURN          reduce using rule 41 (expression_integer -> INT .)
    PRINT           reduce using rule 41 (expression_integer -> INT .)
    IDENT           reduce using rule 41 (expression_integer -> INT .)
    IF              reduce using rule 41 (expression_integer -> INT .)
    WHILE           reduce using rule 41 (expression_integer -> INT .)
    AS_LONG_AS      reduce using rule 41 (expression_integer -> INT .)
    LCURL           reduce using rule 41 (expression_integer -> INT .)
    INT             reduce using rule 41 (expression_integer -> INT .)
    LPAREN          reduce using rule 41 (expression_integer -> INT .)
    $end            reduce using rule 41 (expression_integer -> INT .)
    RCURL           reduce using rule 41 (expression_integer -> INT .)
    SEMICOL         reduce using rule 41 (expression_integer -> INT .)
    THEN            reduce using rule 41 (expression_integer -> INT .)
    DO              reduce using rule 41 (expression_integer -> INT .)
    RPAREN          reduce using rule 41 (expression_integer -> INT .)
    COMMA           reduce using rule 41 (expression_integer -> INT .)
    ELSE            reduce using rule 41 (expression_integer -> INT .)


state 37

    (54) expression_group -> LPAREN . expression RPAREN
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 62
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 38

    (13) functions_declaration_list -> function functions_declaration_list .

    RETURN          reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    PRINT           reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    IDENT           reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    IF              reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    WHILE           reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    AS_LONG_AS      reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    LCURL           reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    INT             reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)
    LPAREN          reduce using rule 13 (functions_declaration_list -> function functions_declaration_list .)


state 39

    (14) function -> FUNCTION IDENT . LPAREN optional_parameter_list RPAREN LCURL body RCURL

    LPAREN          shift and go to state 63


state 40

    (7) variables_declaration_list -> VAR variables_list variables_declaration_list .

    FUNCTION        reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    RETURN          reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    PRINT           reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    IDENT           reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    IF              reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    WHILE           reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    AS_LONG_AS      reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    LCURL           reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    INT             reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)
    LPAREN          reduce using rule 7 (variables_declaration_list -> VAR variables_list variables_declaration_list .)


state 41

    (9) variables_list -> IDENT COMMA . variables_list
    (8) variables_list -> . IDENT
    (9) variables_list -> . IDENT COMMA variables_list

    IDENT           shift and go to state 13

    variables_list                 shift and go to state 64

state 42

    (35) statement_list -> statement statement_list .

    $end            reduce using rule 35 (statement_list -> statement statement_list .)
    RCURL           reduce using rule 35 (statement_list -> statement statement_list .)


state 43

    (44) expression_binop -> expression PLUS . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 65
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 44

    (45) expression_binop -> expression MINUS . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 66
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 45

    (46) expression_binop -> expression TIMES . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 67
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 46

    (47) expression_binop -> expression DIVIDE . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 68
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 47

    (48) expression_binop -> expression EQ . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 69
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 48

    (49) expression_binop -> expression NEQ . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 70
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 49

    (50) expression_binop -> expression LT . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 71
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 50

    (51) expression_binop -> expression GT . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 72
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 51

    (52) expression_binop -> expression LTE . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 73
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 52

    (53) expression_binop -> expression GTE . expression
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 74
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 53

    (28) statement_return -> RETURN expression . SEMICOL
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    SEMICOL         shift and go to state 75
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 54

    (42) expression_identifier -> IDENT .
    (43) expression_call -> IDENT . LPAREN optional_expression_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    SEMICOL         reduce using rule 42 (expression_identifier -> IDENT .)
    PLUS            reduce using rule 42 (expression_identifier -> IDENT .)
    MINUS           reduce using rule 42 (expression_identifier -> IDENT .)
    TIMES           reduce using rule 42 (expression_identifier -> IDENT .)
    DIVIDE          reduce using rule 42 (expression_identifier -> IDENT .)
    EQ              reduce using rule 42 (expression_identifier -> IDENT .)
    NEQ             reduce using rule 42 (expression_identifier -> IDENT .)
    LT              reduce using rule 42 (expression_identifier -> IDENT .)
    GT              reduce using rule 42 (expression_identifier -> IDENT .)
    LTE             reduce using rule 42 (expression_identifier -> IDENT .)
    GTE             reduce using rule 42 (expression_identifier -> IDENT .)
    THEN            reduce using rule 42 (expression_identifier -> IDENT .)
    DO              reduce using rule 42 (expression_identifier -> IDENT .)
    RPAREN          reduce using rule 42 (expression_identifier -> IDENT .)
    RETURN          reduce using rule 42 (expression_identifier -> IDENT .)
    PRINT           reduce using rule 42 (expression_identifier -> IDENT .)
    IDENT           reduce using rule 42 (expression_identifier -> IDENT .)
    IF              reduce using rule 42 (expression_identifier -> IDENT .)
    WHILE           reduce using rule 42 (expression_identifier -> IDENT .)
    AS_LONG_AS      reduce using rule 42 (expression_identifier -> IDENT .)
    LCURL           reduce using rule 42 (expression_identifier -> IDENT .)
    INT             reduce using rule 42 (expression_identifier -> IDENT .)
    $end            reduce using rule 42 (expression_identifier -> IDENT .)
    RCURL           reduce using rule 42 (expression_identifier -> IDENT .)
    COMMA           reduce using rule 42 (expression_identifier -> IDENT .)
    ELSE            reduce using rule 42 (expression_identifier -> IDENT .)
    LPAREN          shift and go to state 57

  ! LPAREN          [ reduce using rule 42 (expression_identifier -> IDENT .) ]


state 55

    (29) statement_print -> PRINT expression . SEMICOL
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    SEMICOL         shift and go to state 76
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 56

    (30) statement_assignment -> IDENT ASSIGN . expression SEMICOL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 77
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 57

    (43) expression_call -> IDENT LPAREN . optional_expression_list RPAREN
    (55) optional_expression_list -> . empty
    (56) optional_expression_list -> . expression_list
    (2) empty -> .
    (57) expression_list -> . expression
    (58) expression_list -> . expression COMMA expression_list
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    RPAREN          reduce using rule 2 (empty -> .)
    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    optional_expression_list       shift and go to state 78
    empty                          shift and go to state 79
    expression_list                shift and go to state 80
    expression                     shift and go to state 81
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 58

    (31) statement_ifthenelse -> IF expression . THEN statement ELSE statement
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    THEN            shift and go to state 82
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 59

    (32) statement_while -> WHILE expression . DO statement
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    DO              shift and go to state 83
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 60

    (27) statement_as_long_as -> AS_LONG_AS expression . DO statement
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    DO              shift and go to state 84
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 61

    (33) statement_compound -> LCURL statement_list . RCURL

    RCURL           shift and go to state 85


state 62

    (54) expression_group -> LPAREN expression . RPAREN
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 63

    (14) function -> FUNCTION IDENT LPAREN . optional_parameter_list RPAREN LCURL body RCURL
    (15) optional_parameter_list -> . empty
    (16) optional_parameter_list -> . parameter_list
    (2) empty -> .
    (17) parameter_list -> . IDENT
    (18) parameter_list -> . IDENT COMMA parameter_list

    RPAREN          reduce using rule 2 (empty -> .)
    IDENT           shift and go to state 87

    optional_parameter_list        shift and go to state 88
    empty                          shift and go to state 89
    parameter_list                 shift and go to state 90

state 64

    (9) variables_list -> IDENT COMMA variables_list .

    VAR             reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    FUNCTION        reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    RETURN          reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    PRINT           reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    IDENT           reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    IF              reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    WHILE           reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    AS_LONG_AS      reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    LCURL           reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    INT             reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)
    LPAREN          reduce using rule 9 (variables_list -> IDENT COMMA variables_list .)


state 65

    (44) expression_binop -> expression PLUS expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    PLUS            reduce using rule 44 (expression_binop -> expression PLUS expression .)
    MINUS           reduce using rule 44 (expression_binop -> expression PLUS expression .)
    EQ              reduce using rule 44 (expression_binop -> expression PLUS expression .)
    NEQ             reduce using rule 44 (expression_binop -> expression PLUS expression .)
    LT              reduce using rule 44 (expression_binop -> expression PLUS expression .)
    GT              reduce using rule 44 (expression_binop -> expression PLUS expression .)
    LTE             reduce using rule 44 (expression_binop -> expression PLUS expression .)
    GTE             reduce using rule 44 (expression_binop -> expression PLUS expression .)
    RETURN          reduce using rule 44 (expression_binop -> expression PLUS expression .)
    PRINT           reduce using rule 44 (expression_binop -> expression PLUS expression .)
    IDENT           reduce using rule 44 (expression_binop -> expression PLUS expression .)
    IF              reduce using rule 44 (expression_binop -> expression PLUS expression .)
    WHILE           reduce using rule 44 (expression_binop -> expression PLUS expression .)
    AS_LONG_AS      reduce using rule 44 (expression_binop -> expression PLUS expression .)
    LCURL           reduce using rule 44 (expression_binop -> expression PLUS expression .)
    INT             reduce using rule 44 (expression_binop -> expression PLUS expression .)
    LPAREN          reduce using rule 44 (expression_binop -> expression PLUS expression .)
    $end            reduce using rule 44 (expression_binop -> expression PLUS expression .)
    RCURL           reduce using rule 44 (expression_binop -> expression PLUS expression .)
    SEMICOL         reduce using rule 44 (expression_binop -> expression PLUS expression .)
    THEN            reduce using rule 44 (expression_binop -> expression PLUS expression .)
    DO              reduce using rule 44 (expression_binop -> expression PLUS expression .)
    RPAREN          reduce using rule 44 (expression_binop -> expression PLUS expression .)
    COMMA           reduce using rule 44 (expression_binop -> expression PLUS expression .)
    ELSE            reduce using rule 44 (expression_binop -> expression PLUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! TIMES           [ reduce using rule 44 (expression_binop -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression_binop -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! LTE             [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]


state 66

    (45) expression_binop -> expression MINUS expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    PLUS            reduce using rule 45 (expression_binop -> expression MINUS expression .)
    MINUS           reduce using rule 45 (expression_binop -> expression MINUS expression .)
    EQ              reduce using rule 45 (expression_binop -> expression MINUS expression .)
    NEQ             reduce using rule 45 (expression_binop -> expression MINUS expression .)
    LT              reduce using rule 45 (expression_binop -> expression MINUS expression .)
    GT              reduce using rule 45 (expression_binop -> expression MINUS expression .)
    LTE             reduce using rule 45 (expression_binop -> expression MINUS expression .)
    GTE             reduce using rule 45 (expression_binop -> expression MINUS expression .)
    RETURN          reduce using rule 45 (expression_binop -> expression MINUS expression .)
    PRINT           reduce using rule 45 (expression_binop -> expression MINUS expression .)
    IDENT           reduce using rule 45 (expression_binop -> expression MINUS expression .)
    IF              reduce using rule 45 (expression_binop -> expression MINUS expression .)
    WHILE           reduce using rule 45 (expression_binop -> expression MINUS expression .)
    AS_LONG_AS      reduce using rule 45 (expression_binop -> expression MINUS expression .)
    LCURL           reduce using rule 45 (expression_binop -> expression MINUS expression .)
    INT             reduce using rule 45 (expression_binop -> expression MINUS expression .)
    LPAREN          reduce using rule 45 (expression_binop -> expression MINUS expression .)
    $end            reduce using rule 45 (expression_binop -> expression MINUS expression .)
    RCURL           reduce using rule 45 (expression_binop -> expression MINUS expression .)
    SEMICOL         reduce using rule 45 (expression_binop -> expression MINUS expression .)
    THEN            reduce using rule 45 (expression_binop -> expression MINUS expression .)
    DO              reduce using rule 45 (expression_binop -> expression MINUS expression .)
    RPAREN          reduce using rule 45 (expression_binop -> expression MINUS expression .)
    COMMA           reduce using rule 45 (expression_binop -> expression MINUS expression .)
    ELSE            reduce using rule 45 (expression_binop -> expression MINUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46

  ! TIMES           [ reduce using rule 45 (expression_binop -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression_binop -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! LTE             [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]


state 67

    (46) expression_binop -> expression TIMES expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    PLUS            reduce using rule 46 (expression_binop -> expression TIMES expression .)
    MINUS           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    TIMES           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    DIVIDE          reduce using rule 46 (expression_binop -> expression TIMES expression .)
    EQ              reduce using rule 46 (expression_binop -> expression TIMES expression .)
    NEQ             reduce using rule 46 (expression_binop -> expression TIMES expression .)
    LT              reduce using rule 46 (expression_binop -> expression TIMES expression .)
    GT              reduce using rule 46 (expression_binop -> expression TIMES expression .)
    LTE             reduce using rule 46 (expression_binop -> expression TIMES expression .)
    GTE             reduce using rule 46 (expression_binop -> expression TIMES expression .)
    RETURN          reduce using rule 46 (expression_binop -> expression TIMES expression .)
    PRINT           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    IDENT           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    IF              reduce using rule 46 (expression_binop -> expression TIMES expression .)
    WHILE           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    AS_LONG_AS      reduce using rule 46 (expression_binop -> expression TIMES expression .)
    LCURL           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    INT             reduce using rule 46 (expression_binop -> expression TIMES expression .)
    LPAREN          reduce using rule 46 (expression_binop -> expression TIMES expression .)
    $end            reduce using rule 46 (expression_binop -> expression TIMES expression .)
    RCURL           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    SEMICOL         reduce using rule 46 (expression_binop -> expression TIMES expression .)
    THEN            reduce using rule 46 (expression_binop -> expression TIMES expression .)
    DO              reduce using rule 46 (expression_binop -> expression TIMES expression .)
    RPAREN          reduce using rule 46 (expression_binop -> expression TIMES expression .)
    COMMA           reduce using rule 46 (expression_binop -> expression TIMES expression .)
    ELSE            reduce using rule 46 (expression_binop -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! LTE             [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]


state 68

    (47) expression_binop -> expression DIVIDE expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    PLUS            reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    MINUS           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    TIMES           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    EQ              reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    NEQ             reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    LT              reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    GT              reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    LTE             reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    GTE             reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    RETURN          reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    PRINT           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    IDENT           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    IF              reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    WHILE           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    AS_LONG_AS      reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    LCURL           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    INT             reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    LPAREN          reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    $end            reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    RCURL           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    SEMICOL         reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    THEN            reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    DO              reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    RPAREN          reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    COMMA           reduce using rule 47 (expression_binop -> expression DIVIDE expression .)
    ELSE            reduce using rule 47 (expression_binop -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! LTE             [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]


state 69

    (48) expression_binop -> expression EQ expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RETURN          reduce using rule 48 (expression_binop -> expression EQ expression .)
    PRINT           reduce using rule 48 (expression_binop -> expression EQ expression .)
    IDENT           reduce using rule 48 (expression_binop -> expression EQ expression .)
    IF              reduce using rule 48 (expression_binop -> expression EQ expression .)
    WHILE           reduce using rule 48 (expression_binop -> expression EQ expression .)
    AS_LONG_AS      reduce using rule 48 (expression_binop -> expression EQ expression .)
    LCURL           reduce using rule 48 (expression_binop -> expression EQ expression .)
    INT             reduce using rule 48 (expression_binop -> expression EQ expression .)
    LPAREN          reduce using rule 48 (expression_binop -> expression EQ expression .)
    $end            reduce using rule 48 (expression_binop -> expression EQ expression .)
    RCURL           reduce using rule 48 (expression_binop -> expression EQ expression .)
    SEMICOL         reduce using rule 48 (expression_binop -> expression EQ expression .)
    THEN            reduce using rule 48 (expression_binop -> expression EQ expression .)
    DO              reduce using rule 48 (expression_binop -> expression EQ expression .)
    RPAREN          reduce using rule 48 (expression_binop -> expression EQ expression .)
    COMMA           reduce using rule 48 (expression_binop -> expression EQ expression .)
    ELSE            reduce using rule 48 (expression_binop -> expression EQ expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52

  ! PLUS            [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! LT              [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! GT              [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! LTE             [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]
  ! GTE             [ reduce using rule 48 (expression_binop -> expression EQ expression .) ]


state 70

    (49) expression_binop -> expression NEQ expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RETURN          reduce using rule 49 (expression_binop -> expression NEQ expression .)
    PRINT           reduce using rule 49 (expression_binop -> expression NEQ expression .)
    IDENT           reduce using rule 49 (expression_binop -> expression NEQ expression .)
    IF              reduce using rule 49 (expression_binop -> expression NEQ expression .)
    WHILE           reduce using rule 49 (expression_binop -> expression NEQ expression .)
    AS_LONG_AS      reduce using rule 49 (expression_binop -> expression NEQ expression .)
    LCURL           reduce using rule 49 (expression_binop -> expression NEQ expression .)
    INT             reduce using rule 49 (expression_binop -> expression NEQ expression .)
    LPAREN          reduce using rule 49 (expression_binop -> expression NEQ expression .)
    $end            reduce using rule 49 (expression_binop -> expression NEQ expression .)
    RCURL           reduce using rule 49 (expression_binop -> expression NEQ expression .)
    SEMICOL         reduce using rule 49 (expression_binop -> expression NEQ expression .)
    THEN            reduce using rule 49 (expression_binop -> expression NEQ expression .)
    DO              reduce using rule 49 (expression_binop -> expression NEQ expression .)
    RPAREN          reduce using rule 49 (expression_binop -> expression NEQ expression .)
    COMMA           reduce using rule 49 (expression_binop -> expression NEQ expression .)
    ELSE            reduce using rule 49 (expression_binop -> expression NEQ expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52

  ! PLUS            [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! LTE             [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]
  ! GTE             [ reduce using rule 49 (expression_binop -> expression NEQ expression .) ]


state 71

    (50) expression_binop -> expression LT expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RETURN          reduce using rule 50 (expression_binop -> expression LT expression .)
    PRINT           reduce using rule 50 (expression_binop -> expression LT expression .)
    IDENT           reduce using rule 50 (expression_binop -> expression LT expression .)
    IF              reduce using rule 50 (expression_binop -> expression LT expression .)
    WHILE           reduce using rule 50 (expression_binop -> expression LT expression .)
    AS_LONG_AS      reduce using rule 50 (expression_binop -> expression LT expression .)
    LCURL           reduce using rule 50 (expression_binop -> expression LT expression .)
    INT             reduce using rule 50 (expression_binop -> expression LT expression .)
    LPAREN          reduce using rule 50 (expression_binop -> expression LT expression .)
    $end            reduce using rule 50 (expression_binop -> expression LT expression .)
    RCURL           reduce using rule 50 (expression_binop -> expression LT expression .)
    SEMICOL         reduce using rule 50 (expression_binop -> expression LT expression .)
    THEN            reduce using rule 50 (expression_binop -> expression LT expression .)
    DO              reduce using rule 50 (expression_binop -> expression LT expression .)
    RPAREN          reduce using rule 50 (expression_binop -> expression LT expression .)
    COMMA           reduce using rule 50 (expression_binop -> expression LT expression .)
    ELSE            reduce using rule 50 (expression_binop -> expression LT expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52

  ! PLUS            [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! EQ              [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! LT              [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! GT              [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! LTE             [ reduce using rule 50 (expression_binop -> expression LT expression .) ]
  ! GTE             [ reduce using rule 50 (expression_binop -> expression LT expression .) ]


state 72

    (51) expression_binop -> expression GT expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RETURN          reduce using rule 51 (expression_binop -> expression GT expression .)
    PRINT           reduce using rule 51 (expression_binop -> expression GT expression .)
    IDENT           reduce using rule 51 (expression_binop -> expression GT expression .)
    IF              reduce using rule 51 (expression_binop -> expression GT expression .)
    WHILE           reduce using rule 51 (expression_binop -> expression GT expression .)
    AS_LONG_AS      reduce using rule 51 (expression_binop -> expression GT expression .)
    LCURL           reduce using rule 51 (expression_binop -> expression GT expression .)
    INT             reduce using rule 51 (expression_binop -> expression GT expression .)
    LPAREN          reduce using rule 51 (expression_binop -> expression GT expression .)
    $end            reduce using rule 51 (expression_binop -> expression GT expression .)
    RCURL           reduce using rule 51 (expression_binop -> expression GT expression .)
    SEMICOL         reduce using rule 51 (expression_binop -> expression GT expression .)
    THEN            reduce using rule 51 (expression_binop -> expression GT expression .)
    DO              reduce using rule 51 (expression_binop -> expression GT expression .)
    RPAREN          reduce using rule 51 (expression_binop -> expression GT expression .)
    COMMA           reduce using rule 51 (expression_binop -> expression GT expression .)
    ELSE            reduce using rule 51 (expression_binop -> expression GT expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52

  ! PLUS            [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! EQ              [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! LT              [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! GT              [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! LTE             [ reduce using rule 51 (expression_binop -> expression GT expression .) ]
  ! GTE             [ reduce using rule 51 (expression_binop -> expression GT expression .) ]


state 73

    (52) expression_binop -> expression LTE expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RETURN          reduce using rule 52 (expression_binop -> expression LTE expression .)
    PRINT           reduce using rule 52 (expression_binop -> expression LTE expression .)
    IDENT           reduce using rule 52 (expression_binop -> expression LTE expression .)
    IF              reduce using rule 52 (expression_binop -> expression LTE expression .)
    WHILE           reduce using rule 52 (expression_binop -> expression LTE expression .)
    AS_LONG_AS      reduce using rule 52 (expression_binop -> expression LTE expression .)
    LCURL           reduce using rule 52 (expression_binop -> expression LTE expression .)
    INT             reduce using rule 52 (expression_binop -> expression LTE expression .)
    LPAREN          reduce using rule 52 (expression_binop -> expression LTE expression .)
    $end            reduce using rule 52 (expression_binop -> expression LTE expression .)
    RCURL           reduce using rule 52 (expression_binop -> expression LTE expression .)
    SEMICOL         reduce using rule 52 (expression_binop -> expression LTE expression .)
    THEN            reduce using rule 52 (expression_binop -> expression LTE expression .)
    DO              reduce using rule 52 (expression_binop -> expression LTE expression .)
    RPAREN          reduce using rule 52 (expression_binop -> expression LTE expression .)
    COMMA           reduce using rule 52 (expression_binop -> expression LTE expression .)
    ELSE            reduce using rule 52 (expression_binop -> expression LTE expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52

  ! PLUS            [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! EQ              [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! NEQ             [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! LT              [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! GT              [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! LTE             [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]
  ! GTE             [ reduce using rule 52 (expression_binop -> expression LTE expression .) ]


state 74

    (53) expression_binop -> expression GTE expression .
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RETURN          reduce using rule 53 (expression_binop -> expression GTE expression .)
    PRINT           reduce using rule 53 (expression_binop -> expression GTE expression .)
    IDENT           reduce using rule 53 (expression_binop -> expression GTE expression .)
    IF              reduce using rule 53 (expression_binop -> expression GTE expression .)
    WHILE           reduce using rule 53 (expression_binop -> expression GTE expression .)
    AS_LONG_AS      reduce using rule 53 (expression_binop -> expression GTE expression .)
    LCURL           reduce using rule 53 (expression_binop -> expression GTE expression .)
    INT             reduce using rule 53 (expression_binop -> expression GTE expression .)
    LPAREN          reduce using rule 53 (expression_binop -> expression GTE expression .)
    $end            reduce using rule 53 (expression_binop -> expression GTE expression .)
    RCURL           reduce using rule 53 (expression_binop -> expression GTE expression .)
    SEMICOL         reduce using rule 53 (expression_binop -> expression GTE expression .)
    THEN            reduce using rule 53 (expression_binop -> expression GTE expression .)
    DO              reduce using rule 53 (expression_binop -> expression GTE expression .)
    RPAREN          reduce using rule 53 (expression_binop -> expression GTE expression .)
    COMMA           reduce using rule 53 (expression_binop -> expression GTE expression .)
    ELSE            reduce using rule 53 (expression_binop -> expression GTE expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52

  ! PLUS            [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! EQ              [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! NEQ             [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! LT              [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! GT              [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! LTE             [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]
  ! GTE             [ reduce using rule 53 (expression_binop -> expression GTE expression .) ]


state 75

    (28) statement_return -> RETURN expression SEMICOL .

    RETURN          reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    PRINT           reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    IDENT           reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    IF              reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    WHILE           reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    AS_LONG_AS      reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    LCURL           reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    INT             reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    LPAREN          reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    $end            reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    RCURL           reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)
    ELSE            reduce using rule 28 (statement_return -> RETURN expression SEMICOL .)


state 76

    (29) statement_print -> PRINT expression SEMICOL .

    RETURN          reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    PRINT           reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    IDENT           reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    IF              reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    WHILE           reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    AS_LONG_AS      reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    LCURL           reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    INT             reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    LPAREN          reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    $end            reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    RCURL           reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)
    ELSE            reduce using rule 29 (statement_print -> PRINT expression SEMICOL .)


state 77

    (30) statement_assignment -> IDENT ASSIGN expression . SEMICOL
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    SEMICOL         shift and go to state 91
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 78

    (43) expression_call -> IDENT LPAREN optional_expression_list . RPAREN

    RPAREN          shift and go to state 92


state 79

    (55) optional_expression_list -> empty .

    RPAREN          reduce using rule 55 (optional_expression_list -> empty .)


state 80

    (56) optional_expression_list -> expression_list .

    RPAREN          reduce using rule 56 (optional_expression_list -> expression_list .)


state 81

    (57) expression_list -> expression .
    (58) expression_list -> expression . COMMA expression_list
    (44) expression_binop -> expression . PLUS expression
    (45) expression_binop -> expression . MINUS expression
    (46) expression_binop -> expression . TIMES expression
    (47) expression_binop -> expression . DIVIDE expression
    (48) expression_binop -> expression . EQ expression
    (49) expression_binop -> expression . NEQ expression
    (50) expression_binop -> expression . LT expression
    (51) expression_binop -> expression . GT expression
    (52) expression_binop -> expression . LTE expression
    (53) expression_binop -> expression . GTE expression

    RPAREN          reduce using rule 57 (expression_list -> expression .)
    COMMA           shift and go to state 93
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    GT              shift and go to state 50
    LTE             shift and go to state 51
    GTE             shift and go to state 52


state 82

    (31) statement_ifthenelse -> IF expression THEN . statement ELSE statement
    (19) statement -> . statement_return
    (20) statement -> . statement_print
    (21) statement -> . statement_assignment
    (22) statement -> . statement_ifthenelse
    (23) statement -> . statement_while
    (24) statement -> . statement_as_long_as
    (25) statement -> . statement_compound
    (26) statement -> . expression
    (28) statement_return -> . RETURN expression SEMICOL
    (29) statement_print -> . PRINT expression SEMICOL
    (30) statement_assignment -> . IDENT ASSIGN expression SEMICOL
    (31) statement_ifthenelse -> . IF expression THEN statement ELSE statement
    (32) statement_while -> . WHILE expression DO statement
    (27) statement_as_long_as -> . AS_LONG_AS expression DO statement
    (33) statement_compound -> . LCURL statement_list RCURL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    RETURN          shift and go to state 24
    PRINT           shift and go to state 25
    IDENT           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    AS_LONG_AS      shift and go to state 29
    LCURL           shift and go to state 30
    INT             shift and go to state 36
    LPAREN          shift and go to state 37

    expression                     shift and go to state 23
    statement                      shift and go to state 94
    statement_return               shift and go to state 16
    statement_print                shift and go to state 17
    statement_assignment           shift and go to state 18
    statement_ifthenelse           shift and go to state 19
    statement_while                shift and go to state 20
    statement_as_long_as           shift and go to state 21
    statement_compound             shift and go to state 22
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 83

    (32) statement_while -> WHILE expression DO . statement
    (19) statement -> . statement_return
    (20) statement -> . statement_print
    (21) statement -> . statement_assignment
    (22) statement -> . statement_ifthenelse
    (23) statement -> . statement_while
    (24) statement -> . statement_as_long_as
    (25) statement -> . statement_compound
    (26) statement -> . expression
    (28) statement_return -> . RETURN expression SEMICOL
    (29) statement_print -> . PRINT expression SEMICOL
    (30) statement_assignment -> . IDENT ASSIGN expression SEMICOL
    (31) statement_ifthenelse -> . IF expression THEN statement ELSE statement
    (32) statement_while -> . WHILE expression DO statement
    (27) statement_as_long_as -> . AS_LONG_AS expression DO statement
    (33) statement_compound -> . LCURL statement_list RCURL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    RETURN          shift and go to state 24
    PRINT           shift and go to state 25
    IDENT           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    AS_LONG_AS      shift and go to state 29
    LCURL           shift and go to state 30
    INT             shift and go to state 36
    LPAREN          shift and go to state 37

    expression                     shift and go to state 23
    statement                      shift and go to state 95
    statement_return               shift and go to state 16
    statement_print                shift and go to state 17
    statement_assignment           shift and go to state 18
    statement_ifthenelse           shift and go to state 19
    statement_while                shift and go to state 20
    statement_as_long_as           shift and go to state 21
    statement_compound             shift and go to state 22
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 84

    (27) statement_as_long_as -> AS_LONG_AS expression DO . statement
    (19) statement -> . statement_return
    (20) statement -> . statement_print
    (21) statement -> . statement_assignment
    (22) statement -> . statement_ifthenelse
    (23) statement -> . statement_while
    (24) statement -> . statement_as_long_as
    (25) statement -> . statement_compound
    (26) statement -> . expression
    (28) statement_return -> . RETURN expression SEMICOL
    (29) statement_print -> . PRINT expression SEMICOL
    (30) statement_assignment -> . IDENT ASSIGN expression SEMICOL
    (31) statement_ifthenelse -> . IF expression THEN statement ELSE statement
    (32) statement_while -> . WHILE expression DO statement
    (27) statement_as_long_as -> . AS_LONG_AS expression DO statement
    (33) statement_compound -> . LCURL statement_list RCURL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    RETURN          shift and go to state 24
    PRINT           shift and go to state 25
    IDENT           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    AS_LONG_AS      shift and go to state 29
    LCURL           shift and go to state 30
    INT             shift and go to state 36
    LPAREN          shift and go to state 37

    expression                     shift and go to state 23
    statement                      shift and go to state 96
    statement_return               shift and go to state 16
    statement_print                shift and go to state 17
    statement_assignment           shift and go to state 18
    statement_ifthenelse           shift and go to state 19
    statement_while                shift and go to state 20
    statement_as_long_as           shift and go to state 21
    statement_compound             shift and go to state 22
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 85

    (33) statement_compound -> LCURL statement_list RCURL .

    RETURN          reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    PRINT           reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    IDENT           reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    IF              reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    WHILE           reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    AS_LONG_AS      reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    LCURL           reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    INT             reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    LPAREN          reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    $end            reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    RCURL           reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)
    ELSE            reduce using rule 33 (statement_compound -> LCURL statement_list RCURL .)


state 86

    (54) expression_group -> LPAREN expression RPAREN .

    PLUS            reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    EQ              reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    LT              reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    GT              reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    LTE             reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    GTE             reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    IDENT           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    IF              reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    AS_LONG_AS      reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    LCURL           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    INT             reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    $end            reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    SEMICOL         reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    THEN            reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    DO              reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 54 (expression_group -> LPAREN expression RPAREN .)


state 87

    (17) parameter_list -> IDENT .
    (18) parameter_list -> IDENT . COMMA parameter_list

    RPAREN          reduce using rule 17 (parameter_list -> IDENT .)
    COMMA           shift and go to state 97


state 88

    (14) function -> FUNCTION IDENT LPAREN optional_parameter_list . RPAREN LCURL body RCURL

    RPAREN          shift and go to state 98


state 89

    (15) optional_parameter_list -> empty .

    RPAREN          reduce using rule 15 (optional_parameter_list -> empty .)


state 90

    (16) optional_parameter_list -> parameter_list .

    RPAREN          reduce using rule 16 (optional_parameter_list -> parameter_list .)


state 91

    (30) statement_assignment -> IDENT ASSIGN expression SEMICOL .

    RETURN          reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    PRINT           reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    IDENT           reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    IF              reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    WHILE           reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    AS_LONG_AS      reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    LCURL           reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    INT             reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    LPAREN          reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    $end            reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    RCURL           reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)
    ELSE            reduce using rule 30 (statement_assignment -> IDENT ASSIGN expression SEMICOL .)


state 92

    (43) expression_call -> IDENT LPAREN optional_expression_list RPAREN .

    PLUS            reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    MINUS           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    TIMES           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    DIVIDE          reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    EQ              reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    NEQ             reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    LT              reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    GT              reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    LTE             reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    GTE             reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    RETURN          reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    PRINT           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    IDENT           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    IF              reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    WHILE           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    AS_LONG_AS      reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    LCURL           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    INT             reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    LPAREN          reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    $end            reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    RCURL           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    SEMICOL         reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    THEN            reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    DO              reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    RPAREN          reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    COMMA           reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)
    ELSE            reduce using rule 43 (expression_call -> IDENT LPAREN optional_expression_list RPAREN .)


state 93

    (58) expression_list -> expression COMMA . expression_list
    (57) expression_list -> . expression
    (58) expression_list -> . expression COMMA expression_list
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    INT             shift and go to state 36
    IDENT           shift and go to state 54
    LPAREN          shift and go to state 37

    expression                     shift and go to state 81
    expression_list                shift and go to state 99
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 94

    (31) statement_ifthenelse -> IF expression THEN statement . ELSE statement

    ELSE            shift and go to state 100


state 95

    (32) statement_while -> WHILE expression DO statement .

    RETURN          reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    PRINT           reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    IDENT           reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    IF              reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    WHILE           reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    AS_LONG_AS      reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    LCURL           reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    INT             reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    LPAREN          reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    $end            reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    RCURL           reduce using rule 32 (statement_while -> WHILE expression DO statement .)
    ELSE            reduce using rule 32 (statement_while -> WHILE expression DO statement .)


state 96

    (27) statement_as_long_as -> AS_LONG_AS expression DO statement .

    RETURN          reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    PRINT           reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    IDENT           reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    IF              reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    WHILE           reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    AS_LONG_AS      reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    LCURL           reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    INT             reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    LPAREN          reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    $end            reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    RCURL           reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)
    ELSE            reduce using rule 27 (statement_as_long_as -> AS_LONG_AS expression DO statement .)


state 97

    (18) parameter_list -> IDENT COMMA . parameter_list
    (17) parameter_list -> . IDENT
    (18) parameter_list -> . IDENT COMMA parameter_list

    IDENT           shift and go to state 87

    parameter_list                 shift and go to state 101

state 98

    (14) function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN . LCURL body RCURL

    LCURL           shift and go to state 102


state 99

    (58) expression_list -> expression COMMA expression_list .

    RPAREN          reduce using rule 58 (expression_list -> expression COMMA expression_list .)


state 100

    (31) statement_ifthenelse -> IF expression THEN statement ELSE . statement
    (19) statement -> . statement_return
    (20) statement -> . statement_print
    (21) statement -> . statement_assignment
    (22) statement -> . statement_ifthenelse
    (23) statement -> . statement_while
    (24) statement -> . statement_as_long_as
    (25) statement -> . statement_compound
    (26) statement -> . expression
    (28) statement_return -> . RETURN expression SEMICOL
    (29) statement_print -> . PRINT expression SEMICOL
    (30) statement_assignment -> . IDENT ASSIGN expression SEMICOL
    (31) statement_ifthenelse -> . IF expression THEN statement ELSE statement
    (32) statement_while -> . WHILE expression DO statement
    (27) statement_as_long_as -> . AS_LONG_AS expression DO statement
    (33) statement_compound -> . LCURL statement_list RCURL
    (36) expression -> . expression_integer
    (37) expression -> . expression_identifier
    (38) expression -> . expression_call
    (39) expression -> . expression_binop
    (40) expression -> . expression_group
    (41) expression_integer -> . INT
    (42) expression_identifier -> . IDENT
    (43) expression_call -> . IDENT LPAREN optional_expression_list RPAREN
    (44) expression_binop -> . expression PLUS expression
    (45) expression_binop -> . expression MINUS expression
    (46) expression_binop -> . expression TIMES expression
    (47) expression_binop -> . expression DIVIDE expression
    (48) expression_binop -> . expression EQ expression
    (49) expression_binop -> . expression NEQ expression
    (50) expression_binop -> . expression LT expression
    (51) expression_binop -> . expression GT expression
    (52) expression_binop -> . expression LTE expression
    (53) expression_binop -> . expression GTE expression
    (54) expression_group -> . LPAREN expression RPAREN

    RETURN          shift and go to state 24
    PRINT           shift and go to state 25
    IDENT           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    AS_LONG_AS      shift and go to state 29
    LCURL           shift and go to state 30
    INT             shift and go to state 36
    LPAREN          shift and go to state 37

    expression                     shift and go to state 23
    statement                      shift and go to state 103
    statement_return               shift and go to state 16
    statement_print                shift and go to state 17
    statement_assignment           shift and go to state 18
    statement_ifthenelse           shift and go to state 19
    statement_while                shift and go to state 20
    statement_as_long_as           shift and go to state 21
    statement_compound             shift and go to state 22
    expression_integer             shift and go to state 31
    expression_identifier          shift and go to state 32
    expression_call                shift and go to state 33
    expression_binop               shift and go to state 34
    expression_group               shift and go to state 35

state 101

    (18) parameter_list -> IDENT COMMA parameter_list .

    RPAREN          reduce using rule 18 (parameter_list -> IDENT COMMA parameter_list .)


state 102

    (14) function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL . body RCURL
    (3) body -> . optional_variables_declaration_list optional_functions_declaration_list statement_list
    (4) optional_variables_declaration_list -> . empty
    (5) optional_variables_declaration_list -> . variables_declaration_list
    (2) empty -> .
    (6) variables_declaration_list -> . VAR variables_list
    (7) variables_declaration_list -> . VAR variables_list variables_declaration_list

    FUNCTION        reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    PRINT           reduce using rule 2 (empty -> .)
    IDENT           reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    AS_LONG_AS      reduce using rule 2 (empty -> .)
    LCURL           reduce using rule 2 (empty -> .)
    INT             reduce using rule 2 (empty -> .)
    LPAREN          reduce using rule 2 (empty -> .)
    VAR             shift and go to state 6

    body                           shift and go to state 104
    optional_variables_declaration_list shift and go to state 3
    empty                          shift and go to state 4
    variables_declaration_list     shift and go to state 5

state 103

    (31) statement_ifthenelse -> IF expression THEN statement ELSE statement .

    RETURN          reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    PRINT           reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    IDENT           reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    IF              reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    WHILE           reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    AS_LONG_AS      reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    LCURL           reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    INT             reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    LPAREN          reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    $end            reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    RCURL           reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)
    ELSE            reduce using rule 31 (statement_ifthenelse -> IF expression THEN statement ELSE statement .)


state 104

    (14) function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body . RCURL

    RCURL           shift and go to state 105


state 105

    (14) function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .

    FUNCTION        reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    RETURN          reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    PRINT           reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    IDENT           reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    IF              reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    WHILE           reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    AS_LONG_AS      reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    LCURL           reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    INT             reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)
    LPAREN          reduce using rule 14 (function -> FUNCTION IDENT LPAREN optional_parameter_list RPAREN LCURL body RCURL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 26 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 54 resolved as shift
