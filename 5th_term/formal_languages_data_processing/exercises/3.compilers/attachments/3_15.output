State 9 conflicts: 1 shift/reduce
State 11 conflicts: 1 shift/reduce
State 12 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: E

    2 E: 'while' E 'do' E
    3  | id '=' E
    4  | E '+' E
    5  | id


Terminals, with rules where they appear

$end (0) 0
'+' (43) 4
'=' (61) 3
'do' (100) 2
'while' (119) 2
error (256)
id (258) 3 5


Nonterminals, with rules where they appear

$accept (8)
    on left: 0
S (9)
    on left: 1, on right: 0
E (10)
    on left: 2 3 4 5, on right: 1 2 3 4


state 0

    0 $accept: . S $end
    1 S: . E
    2 E: . 'while' E 'do' E
    3  | . id '=' E
    4  | . E '+' E
    5  | . id

    id       shift, and go to state 1
    'while'  shift, and go to state 2

    S  go to state 3
    E  go to state 4


state 1

    3 E: id . '=' E
    5  | id .  [$end, 'do', '+']

    '='  shift, and go to state 5

    $default  reduce using rule 5 (E)


state 2

    2 E: . 'while' E 'do' E
    2  | 'while' . E 'do' E
    3  | . id '=' E
    4  | . E '+' E
    5  | . id

    id       shift, and go to state 1
    'while'  shift, and go to state 2

    E  go to state 6


state 3

    0 $accept: S . $end

    $end  shift, and go to state 7


state 4

    1 S: E .  [$end]
    4 E: E . '+' E

    '+'  shift, and go to state 8

    $default  reduce using rule 1 (S)


state 5

    2 E: . 'while' E 'do' E
    3  | . id '=' E
    3  | id '=' . E
    4  | . E '+' E
    5  | . id

    id       shift, and go to state 1
    'while'  shift, and go to state 2

    E  go to state 9


state 6

    2 E: 'while' E . 'do' E
    4  | E . '+' E

    'do'  shift, and go to state 10
    '+'   shift, and go to state 8


state 7

    0 $accept: S $end .

    $default  accept


state 8

    2 E: . 'while' E 'do' E
    3  | . id '=' E
    4  | . E '+' E
    4  | E '+' . E
    5  | . id

    id       shift, and go to state 1
    'while'  shift, and go to state 2

    E  go to state 11


state 9

    3 E: id '=' E .  [$end, 'do', '+']
    4  | E . '+' E

    '+'  shift, and go to state 8

    '+'       [reduce using rule 3 (E)]
    $default  reduce using rule 3 (E)


state 10

    2 E: . 'while' E 'do' E
    2  | 'while' E 'do' . E
    3  | . id '=' E
    4  | . E '+' E
    5  | . id

    id       shift, and go to state 1
    'while'  shift, and go to state 2

    E  go to state 12


state 11

    4 E: E . '+' E  [$end, 'do', '+']
    4  | E '+' E .  [$end, 'do', '+']

    '+'  shift, and go to state 8

    '+'       [reduce using rule 4 (E)]
    $default  reduce using rule 4 (E)


state 12

    2 E: 'while' E 'do' E .  [$end, 'do', '+']
    4  | E . '+' E

    '+'  shift, and go to state 8

    '+'       [reduce using rule 2 (E)]
    $default  reduce using rule 2 (E)
