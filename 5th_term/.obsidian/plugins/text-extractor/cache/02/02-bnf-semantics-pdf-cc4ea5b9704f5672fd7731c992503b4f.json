{"path":".obsidian/plugins/text-extractor/cache/02/02-bnf-semantics-pdf-cc4ea5b9704f5672fd7731c992503b4f.json","text":"Describe a programming language 1 Based on the slides of Maurizio Gabbrielli Description of a language (artificial) • The description of a language is on three dimensions (Morris, 1938): – Syntax – Semantics – Pragmatic Grammar rules When a sentence is correct Relationship between symbols Attribution of Meaning What does a correct sentence mean Relationship between signs and meaning How correct and sensible sentences are used Relationships between signs, meaning and user 2 A fourth level Execute a correct sentence respecting its semantics • For an executable language – Implementation 3 Tools to describe languages • Syntax – Formal: Generative Grammars (Chomsky), BNF (Backus Naur Form) – Quasi-formal: typing, contextual constraints • Semantics – Informal: Natural language, Manual – Formal: denotational, operational (axiomatic, algebraic) • Pragmatic – Informal: examples – Semi-formal: programming methodologies • Implementation – Derivation from semantics – Abstract machine 4 Syntax • It tells us how to build the correct language phrases: var A: integer; if a > 0 then C else C var A: intgr; if a > 0 else C then C; Error Lexical Error Grammar • Same constructs expressed differently in different languages – Ex: vector of 10 elements • In C: int V [10] • In Pascal: V : Array [0.. 9] of Integer – Presumably these two objects have the same meaning (the same semantics). 5 Syntax • How to define and recognize the correct language constructs? This is an essential problem when compiling a program – Enumerating all well-formed programs? ... a little long – V arious tools: • Generative grammars : rules for building language sentences – Regular grammars – Context-free grammars • Automata : formalisms to recognize the constructs of a language • BNF : Backus Naur Form first used for Algol in 1958 by Naur (Chair of ALGOL Committee) and Backus (Secretary) – Same thing as context-free grammars 6 BNF • The form of Backus and Naur (BNF) is a notation for presenting free grammars, used for the first time in the syntax definition ALGOL 60. – <W> notation is used to indicate a symbol – W e use the notation <A>:: = <B> | <C> To indicate two rules <A>:: = <B> And <A>:: = <C> – In the extended version the symbol <A>* (Kleene star) has the meaning that A is repeated 0 or more times 7 Examples of derivations <exp>:: = <num> | - <exp> ( <exp> ) | <exp> + <exp> | <exp> * <exp> <num> ::= 0| 1 | 2 | … | 9 <exp> ⇒ <exp> * <exp> → <exp> * <num> → <exp> * 3 → (<exp>) * 3 → (<exp> + <exp>) * 3 → … → (1 + <exp>) * 3 → … → (1 + 2) * 3 <exp> <exp> <exp>* 1 ( )<exp> <exp> <exp>+ 8 <num> 2 <num> 3 <num> A simple imperative language example The Dangling Else Grammar are ambiguous sometimes Example in Java: if (door-open) if (none-in-view) return \" nobody? \" ; else ring-bell(); which \"if\" the \"else\" is paired? W e look at the official definition of Java... 10 So... The correct reading is: if (door-open) if (None-in-view) return \" Nobody? \" ; else Play-camp (); • \"The Java programming language, like C and C++ and many programming languages before them, arbitrarily decided that an else clause belongs to the innermost if to which it might possibly belong\" 11 Semantics • Need to be able to define exactly \"What does\" a program • The formal (semi) definition of semantics is part of a language standard definition of languages since the 80' • V arious ways to define the semantics of a programming language – Algebraic – Axiomatic – Operational – Denotational • There is no universally accepted standard methodology 12 Operational semantics • Obtained by defining an Interpreter of the language on a guest machine which components are mathematically described – State (describes altogether the system) – T ransition (specify a computation step that changes the state and/or the program) – Computation (sequence of transitions) • Especially useful because it directly provides an implementation model • Y ou can define it in a formal and syntax-driven way (SOS) 13 Example 14","libVersion":"0.0.0","langs":"","hash":"","size":0}