{"path":".obsidian/plugins/text-extractor/cache/pa/pasted-image-20230316110501-png-c84f252bbef6487e41119b82b9cc1cbf.json","text":"6 7 instance Functor Maybe2 where 8 fmap f (Just2 a) = Just2 (f a) 9 fmap f (Nothing2) = Nothing2 10 11 instance Applicative Maybe2 where 12 pure = Just2 13 Just2 f <#> j = fmap f j 14 Nothing2 <x> j = Nothing2 15 16 -- lists, either, maybes 17 18 data Tree a = Tip a | Branch (Tree a (Tree a) deriving Show 19 20 instance Functor Tree where 21 fmap f (Tip a) = Tip (f a) 22 fmap f (Branch left right) = Branch (fmap f left) (fmap f right) 23 24 instance Applicative Tree where 25 pure = Tip 2 Tip f <#> t = fmap f t 27 Branch left right <#> t = Branch (left <x> t |[right <#> t|| PROBLEMS ~OUTPUT DEBUGCONSOLE TERMINAL [1 of 1] Compiling Main ( applicative.hs, interpreted ) Ok, one module loaded. #Main> Branch (Tip 4) (Branch (Tip 5) (Tip 6)) Branch (Tip 4) (Branch (Tip 5) (Tip 6)) *Main> :r [1 of 1] Compiling Main ( applicative.hs, interpreted ) Ok, one module loaded. *Main> x = Branch (Tip 4) (Branch (Tip 5) (Tip 6)) *Main> Tip (x4) <> x Branch (Tip 16) (Branch (Tip 20) )] #Main> Branch (Tip (+1)) (Tip (: Branch (Branch (Tip 5) (Branch P 7))) (Branch (Tip 8) (Branch (Tip 10) (Tip 12))) Â«Main> |","libVersion":"0.0.0","langs":"eng","hash":"","size":0}